"use strict";(self.webpackChunkrealsee_developer_github_com=self.webpackChunkrealsee_developer_github_com||[]).push([[8488],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>g});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=p(a),m=l,g=u["".concat(s,".").concat(m)]||u[m]||c[m]||r;return a?n.createElement(g,o(o({ref:t},d),{},{components:a})):n.createElement(g,o({ref:t},d))}));function g(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,o=new Array(r);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:l,o[1]=i;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(67294),l=a(86010);const r={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(r.tabItem,o),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>c});var n=a(87462),l=a(67294),r=a(86010),o=a(72389),i=a(67392),s=a(7094),p=a(12466);const d={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function u(e){const{lazy:t,block:a,defaultValue:o,values:u,groupId:c,className:m}=e,g=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=u??g.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),v=(0,i.l)(f,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===o?o:o??g.find((e=>e.props.default))?.props.value??g[0].props.value;if(null!==b&&!f.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:h,setTabGroupChoices:k}=(0,s.U)(),[y,N]=(0,l.useState)(b),w=[],{blockElementScrollPositionUntilNextRender:P}=(0,p.o5)();if(null!=c){const e=h[c];null!=e&&e!==y&&f.some((t=>t.value===e))&&N(e)}const T=e=>{const t=e.currentTarget,a=w.indexOf(t),n=f[a].value;n!==y&&(P(t),N(n),null!=c&&k(c,String(n)))},I=e=>{let t=null;switch(e.key){case"Enter":T(e);break;case"ArrowRight":{const a=w.indexOf(e.currentTarget)+1;t=w[a]??w[0];break}case"ArrowLeft":{const a=w.indexOf(e.currentTarget)-1;t=w[a]??w[w.length-1];break}}t?.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",d.tabList)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},m)},f.map((e=>{let{value:t,label:a,attributes:o}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,key:t,ref:e=>w.push(e),onKeyDown:I,onClick:T},o,{className:(0,r.Z)("tabs__item",d.tabItem,o?.className,{"tabs__item--active":y===t})}),a??t)}))),t?(0,l.cloneElement)(g.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==y})))))}function c(e){const t=(0,o.Z)();return l.createElement(u,(0,n.Z)({key:String(t)},e))}},27278:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>g,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var n=a(87462),l=(a(67294),a(3905)),r=a(65488),o=a(85162);const i={title:"Introduction to VR View Room Plugin"},s=void 0,p={unversionedId:"front/3d-space/advanced/dnalogel/intro",id:"front/3d-space/advanced/dnalogel/intro",title:"Introduction to VR View Room Plugin",description:"npm version",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/front/3d-space/advanced/dnalogel/intro.md",sourceDirName:"front/3d-space/advanced/dnalogel",slug:"/front/3d-space/advanced/dnalogel/intro",permalink:"/en/docs/front/3d-space/advanced/dnalogel/intro",draft:!1,tags:[],version:"current",lastUpdatedBy:"lichengjie003",lastUpdatedAt:1684216246,formattedLastUpdatedAt:"May 16, 2023",frontMatter:{title:"Introduction to VR View Room Plugin"},sidebar:"\u4e09\u7ef4\u7a7a\u95f4",previous:{title:"Click on an object",permalink:"/en/docs/front/3d-space/get-started/usage/collision-detection"},next:{title:'Model "Widget"',permalink:"/en/docs/front/3d-space/advanced/dnalogel/ModelViewPlugin"}},d={},u=[{value:"Use Instructions",id:"use-instructions",level:2},{value:"1 - Installation",id:"1---installation",level:3},{value:"2 - Plugin registration",id:"2---plugin-registration",level:3},{value:"Add-ons Method Use",id:"add-ons-method-use",level:3},{value:"Add-ons Dependencies",id:"add-ons-dependencies",level:3},{value:"Related links",id:"related-links",level:2},{value:"Effect Preview",id:"effect-preview",level:2}],c={toc:u},m="wrapper";function g(e){let{components:t,...a}=e;return(0,l.kt)(m,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@realsee/dnalogel"},(0,l.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@realsee/dnalogel.svg?style=flat-square&logo=npm&label=npm%20install%20@realsee/dnalogel",alt:"npm version"}))),(0,l.kt)("p",null,"@realsee/dnalogel will ",(0,l.kt)("a",{parentName:"p",href:"https://realsee.com"},"Realsee(realsee.com)")," ",(0,l.kt)("strong",{parentName:"p"},"VR see room")," regular capacity sedimentation as ",(0,l.kt)("inlineCode",{parentName:"p"},"Five Plugins")," for abstraction. Combine",(0,l.kt)("a",{parentName:"p",href:"https://open-platform.realsee.com/developer/docs/front/3d-space/get-started/rendering-engine/"},"to make rich three-dimensional applications like VR to view SDK Five")," and ",(0,l.kt)("a",{parentName:"p",href:"https://open-platform.realsee.com/developer/open/api/#/"},"like the Open API"),".Regardless of how the online environment works in the musical and exciteous attempts, we have left unreserved open sources to github ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/realsee-developer/dnalogel"},"realsee-developer/dnalogel"),"."),(0,l.kt)("h2",{id:"use-instructions"},"Use Instructions"),(0,l.kt)("h3",{id:"1---installation"},"1 - Installation"),(0,l.kt)(r.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @realsee/dnalogel\n"))),(0,l.kt)(o.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @realsee/dnalogel\n"))),(0,l.kt)(o.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add @realsee/dnalogel\n")))),(0,l.kt)("p",null,"Version 2.x Depends ",(0,l.kt)("inlineCode",{parentName:"p"},"svelte"),", install it at the same time:"),(0,l.kt)(r.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install svelte \n"))),(0,l.kt)(o.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add svelte\n"))),(0,l.kt)(o.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add svelte\n")))),(0,l.kt)("h3",{id:"2---plugin-registration"},"2 - Plugin registration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import { Five } from '@realsee/five'\nimport { Plugin } from '@realsee/dnalogel'\nconst five = new Five({\n  plugins: [[Plugin, 'PluginName', initOptions]],\n})\n")),(0,l.kt)("h3",{id:"add-ons-method-use"},"Add-ons Method Use"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// The methods provided by different plugins may differ, please refer to the plugin API documentation\nfive.plugins.PluginName.load(data)\nfive.plugins.PluginName.enable()\nfive.plugins.PluginName.disable()\nfive.plugins.PluginName.dispose()\n")),(0,l.kt)("h3",{id:"add-ons-dependencies"},"Add-ons Dependencies"),(0,l.kt)("p",null,"You can view data acquisition and related open API via ",(0,l.kt)("a",{parentName:"p",href:"https://open-platform.realsee.com/developer/open/api#/"},"open API")),(0,l.kt)("h2",{id:"related-links"},"Related links"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://unpkg.com/@realsee/dnalogel/docs/index.html"},"API documentation")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/realsee-developer/dnalogel/tree/main/examples/src"},"Demo source")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://open-platform.realsee.com/developer/open/api/"},"Data Dependencies\uff1aopen API")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/realsee-developer/dnalogel/blob/main/plugins/CHANGELOG.md"},"CHANGELOG"))),(0,l.kt)("h2",{id:"effect-preview"},"Effect Preview"),(0,l.kt)("p",null,"We wrote a simple example of effect for each plugin. You can click on preview\uff1a ",(0,l.kt)("a",{parentName:"p",href:"https://realsee-developer.github.io/dnalogel/"},"@realsee/dnalogel showcase")))}g.isMDXComponent=!0}}]);