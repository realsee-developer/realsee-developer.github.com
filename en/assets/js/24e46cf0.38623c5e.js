"use strict";(self.webpackChunkrealsee_developer_github_com=self.webpackChunkrealsee_developer_github_com||[]).push([[3072],{49613:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var a=t(59496);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(t),m=r,k=u["".concat(s,".").concat(m)]||u[m]||c[m]||i;return t?a.createElement(k,o(o({ref:n},d),{},{components:t})):a.createElement(k,o({ref:n},d))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},31281:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=t(2962),r=(t(59496),t(49613));const i={title:"Android"},o=void 0,l={unversionedId:"webview/app/Android",id:"webview/app/Android",title:"Android",description:"This document is in the direction of Android developers, in the description that follows, we assume you already have Android basics and installed Android Studio and other related development environments.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/webview/app/Android.md",sourceDirName:"webview/app",slug:"/webview/app/Android",permalink:"/en/docs/webview/app/Android",draft:!1,tags:[],version:"current",lastUpdatedBy:"sansi.lcj",lastUpdatedAt:1669717185,formattedLastUpdatedAt:"Nov 29, 2022",frontMatter:{title:"Android"},sidebar:"\u5bb9\u5668\u96c6\u6210",previous:{title:"iOS party",permalink:"/en/docs/webview/app/iOS"},next:{title:"WeChat Miniprogram",permalink:"/en/docs/webview/miniProgram/wechat"}},s={},p=[{value:"Download address",id:"download-address",level:2},{value:"Environmental requirements",id:"environmental-requirements",level:2},{value:"Application for SDK access key",id:"application-for-sdk-access-key",level:3},{value:"Integration step",id:"integration-step",level:2},{value:"Introduce SDK",id:"introduce-sdk",level:3},{value:"Add Trilateral Dependency",id:"add-trilateral-dependency",level:3},{value:"Initialize SDK",id:"initialize-sdk",level:3},{value:"Open VR Page",id:"open-vr-page",level:3},{value:"obfuscate configuration",id:"obfuscate-configuration",level:3},{value:"Extended support",id:"extended-support",level:2},{value:"See with",id:"see-with",level:3},{value:"Share",id:"share",level:3},{value:"Fully customized",id:"fully-customized",level:4},{value:"Partial Customization",id:"partial-customization",level:4},{value:"Share with VRSDK",id:"share-with-vrsdk",level:4},{value:"Custom Loading",id:"custom-loading",level:3},{value:"Page Jump",id:"page-jump",level:3},{value:"Custom Protocol",id:"custom-protocol",level:3},{value:"<code>callAndBackfeed</code>",id:"callandbackfeed",level:4},{value:"<code>callAndListen</code>",id:"callandlisten",level:4}],d={toc:p};function c(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"hint",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"This document is in the direction of ",(0,r.kt)("strong",{parentName:"p"},"Android developers"),", in the description that follows, we assume you already have Android basics and installed Android Studio and other related development environments.")),(0,r.kt)("h2",{id:"download-address"},"Download address"),(0,r.kt)("p",null,"If you see two versions of SDK\uff1a",(0,r.kt)("strong",{parentName:"p"},"basics"),"and",(0,r.kt)("strong",{parentName:"p"},"with revision"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Base version"),"\uff1aprovides basic VR container capabilities such as full-screen browsing, vibration, keeping screen on and detecting microphone.If you only need to view VR features, it is recommended that you integrate this version."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"with version"),"\uff1acontains ",(0,r.kt)("strong",{parentName:"li"},"basic version")," and includes ",(0,r.kt)("a",{parentName:"li",href:"https://cloud.tencent.com/document/product/647/32689"},"TRTC")," to support real-time voice.It is recommended that you integrate this version if you need to support online viewing features.")),(0,r.kt)("table",{align:"center"},(0,r.kt)("tr",{align:"center"},(0,r.kt)("th",null,"Type"),(0,r.kt)("th",null,"SDK"),(0,r.kt)("th",null,"DEMO"),(0,r.kt)("th",null,"Installation increment")),(0,r.kt)("tr",{align:"center"},(0,r.kt)("td",{rowspan:"1"},"Base Version"),(0,r.kt)("td",null,(0,r.kt)("a",{target:"_blank",href:"https://vr-public-1304125667.cos.ap-beijing.myqcloud.com/release/vrnative/rsvrsdk_lite-1.0.16.aar"},"rsvrsdk_lite-1.0.16")),(0,r.kt)("td",null,(0,r.kt)("a",{target:"_blank",href:"https://vr-public-1304125667.cos.ap-beijing.myqcloud.com/release/vrnative/demo_external.zip"},"demo")),(0,r.kt)("td",null,"About 1.2M")),(0,r.kt)("tr",{align:"center"},(0,r.kt)("td",{rowspan:"1"},"Take Version"),(0,r.kt)("td",null,(0,r.kt)("a",{target:"_blank",href:"https://vr-public-1304125667.cos.ap-beijing.myqcloud.com/release/vrnative/rsvrsdk-1.0.16.aar"},"rsvrsdk-1.0.16")),(0,r.kt)("td",null,(0,r.kt)("a",{target:"_blank",href:"https://vr-public-1304125667.cos.ap-beijing.myqcloud.com/release/vrnative/demo_external.zip"},"demo")),(0,r.kt)("td",null,"About 10M"))),(0,r.kt)("h2",{id:"environmental-requirements"},"Environmental requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Minimum compatibility with Android 5.0 (SDK API Lebel 21), recommended using Android 8.0 (SDK API Lebel 26) and above."),(0,r.kt)("li",{parentName:"ul"},"Android Studio 3.5 and above."),(0,r.kt)("li",{parentName:"ul"},"App requires Android 5.0 and above.")),(0,r.kt)("h3",{id:"application-for-sdk-access-key"},"Application for SDK access key"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Please apply to the developer center for access key containing ",(0,r.kt)("inlineCode",{parentName:"p"},"app_id")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"app_secret"),".")),(0,r.kt)("h2",{id:"integration-step"},"Integration step"),(0,r.kt)("h3",{id:"introduce-sdk"},"Introduce SDK"),(0,r.kt)("p",null,"Add ",(0,r.kt)("strong",{parentName:"p"},"vrsdk")," folders in main ",(0,r.kt)("inlineCode",{parentName:"p"},"module")," , put ",(0,r.kt)("strong",{parentName:"p"},"rsvrsdk-{\u7248\u672c\u53f7}.aar")," into it, and import it into the project in the form of local ",(0,r.kt)("inlineCode",{parentName:"p"},"aar"),"."),(0,r.kt)("p",null,"Change build.gradle:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy",metastring:'title="build.gradle"',title:'"build.gradle"'},"dependencies {\n  ...\n  implementation fileTree(dir: 'vrsdk', include: ['*.aar'])\n  ...\n}\n")),(0,r.kt)("h3",{id:"add-trilateral-dependency"},"Add Trilateral Dependency"),(0,r.kt)("p",null,"Some third-party library dependencies need to be added to ",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle"),"\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy",metastring:'title="build.gradle"',title:'"build.gradle"'},'dependencies have been {\n  ...\n    // basic component\n    api "androidx. ecyview:recyclerview:1.1.0"\n    api "androidx.fragment:fragment:1.2.4"\n    // Network parsing data\n    api "com.squareup.okhttp3:okhttp:3.7.0"\n    api "com.squareup.retrofit2:retrofit:2.1.0"\n    api "io.reactivex:rxjava:1.2.9"\n    api "com.google.code.gson:gson:2.7"\n    api "io.reactivex:rxandroid:1.2.1"\n    // Picture\n    api "com.github.bumptech.glide:glide:4.8.0"\n    // Local notification\n    api "androidx.localbroadcastmanager:localbroadcastmanager:1.0.0"\n  ...\n}\n')),(0,r.kt)("h3",{id:"initialize-sdk"},"Initialize SDK"),(0,r.kt)("p",null,"The initialization of the SDK needs to be performed in the custom ",(0,r.kt)("inlineCode",{parentName:"p"},"application")," , and the initialization method\uff1ais called"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"RsVrSdk.init(this, new VrCallBack())\n")),(0,r.kt)("p",null,"Required parameters appId and appSecretary are required."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public class App extends Application {\n\n  @Override\n  public void onCreate() {\n    super.onCreate();\n    //Set debug mode\n    RsVrSdk.setDebug(true);\n    // Initialize VR configuration\n    initVr();\n  }\n\n  // Initialize VR configuration\n  private void initVr() {\n        RsVrSdk.init(this, new RsVrCallBack() {\n            // App ID, used to pass to the server\n            @Override\n            public RsAppInfo appInfo() {\n                return new RsAppInfo() {\n                    // When accessing, please contact Realsee to obtain the official value (****required****), test available 1016\n                    @Override\n                    public String appId() {\n                        return "1016";\n                    }\n                    // Please contact Realsee to obtain the official value (****required****) for formal access, 123123 is available for testing\n                    @Override\n                    public String appSecret() {\n                        return "123123";\n                    }\n                    // Can be used as the app identifier of the application (****required****)\n                    @Override\n                    public String scheme() {\n                        return "realsee";\n                    }\n                    // Can use the form of schema+version number Return, convenient for subsequent operations related to version (****required****)\n                    @Override\n                    public String userAgent() {\n                        return "realsee/2.45.0";\n                    }\n                };\n            }\n        } );\n}\n')),(0,r.kt)("h3",{id:"open-vr-page"},"Open VR Page"),(0,r.kt)("p",null,"after initialization finished, by calling\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"RsVrSdk.openVr (this, vrEntity)\n")),(0,r.kt)("p",null,"Open VR link"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'String url = "http://open.realsee.com/xxxxx"\nRsVrEntity vrEntity = new RsVrEntity(url);\nRsVrSdk.openVr(this, vrEntity);\n')),(0,r.kt)("h3",{id:"obfuscate-configuration"},"obfuscate configuration"),(0,r.kt)("p",null,"After introducing SDK, pack apk requires attention to obfuscate configurations, refer to ",(0,r.kt)("strong",{parentName:"p"},"progurad-rules.pro")," profile:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties",metastring:'title="progurad-rules.pro"',title:'"progurad-rules.pro"'},"#============================ Tencent Cloud Trtc start==================== =====\n-keep class com.tencent.** {*;}\n#=============================Rxjava start= =========================\n-keep class rx.** {*;}\n-keep class jp.co.cyberagent.** {*; }\n# wasabeef. blurry glide picasso\n-keep class jp. wasabeef.** {*;}\n#============================ Retrofit start===========================\n-keep class com.squareup.** {*;}\n-keep class okhttp3.** {*;}\n-keep class okio.** {*;}\n-keep class retrofit2.** {*;}\n#======================= ====glide start===========================\n-keep public class * implements com.bumptech.glide.module.GlideModule\n-keep public class * extends com.bumptech.glide.AppGlideModule\n-keep public enum com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$** {\n**[] $VALUES;\npublic *;\n}\n-keep class com.bumptech.glide.** {*;}\n#==========================vrsdk start==========================\n-keep class com.rushi.android.vrsdk.** {*;}\n-keep class com.lianjia.common.vr.** {*;}\n-keep interface com.lianjia.common.vr.** {*;}\n")),(0,r.kt)("p",null,"Complete integration of RsVrdk SDK basic functionality from here"),(0,r.kt)("h2",{id:"extended-support"},"Extended support"),(0,r.kt)("h3",{id:"see-with"},"See with"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Please note that using VR belt viewing, you need to download the version of SDK package")),(0,r.kt)("p",null,"VR belt need to use TRTC ",(0,r.kt)("a",{parentName:"p",href:"https://cloud.tencent.com/document/product/647/32689"},"TRTC"),"voice service. If the app is not integrated this service you need to add a dependency on",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},'dependencies {\n    ...\n    // See audio\n    api "com.tencent.liteav:LiteAVSDK_Professional:8.4.9947"\n    ...\n}\n')),(0,r.kt)("h3",{id:"share"},"Share"),(0,r.kt)("p",null,"RsVrSdk SDK supports calling micromessaging for sessions, friends, copying links; according to call priority, shared implementations support three ways\uff1a"),(0,r.kt)("h4",{id:"fully-customized"},"Fully customized"),(0,r.kt)("p",null,"Shared implementation is fully implemented by app, SDK provides only channels for shared data transmission. Complete by implementing methods\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Initialize VR configuration and callback\nRsVrSdk.init(this, new RsVrCallBack() {\n  @Override\n  public RsAppInfo appInfo() {\n    return new RsAppInfo() {\n      ...\n        /**\n        * Fully customized sharing Implementation\n        * @param context context\n        * @param shareJson shared entity json passed from the H5 side\n        * @return returns true to represent complete customization, the default is false\n        */\n        @Override\n        public boolean shareWithParam(Context context, String shareJson) {\n            Log.e(TAG,"shareWithParam shareJson: "+shareJson);\n            return true;\n        }\n      ...\n    };\n  }\n')),(0,r.kt)("h4",{id:"partial-customization"},"Partial Customization"),(0,r.kt)("p",null,"The shared popup is implemented by SDK, when the items in the popup are clicked, pass the data to the app implementation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Initialize VR configuration and callback\nRsVrSdk.init(this, new RsVrCallBack() {\n  @Override\n  public RsAppInfo appInfo() {\n    return new RsAppInfo() {\n      ...\n        /**\n        * Partial custom sharing Part of the implementation, receiving the callback when clicking to share a specific item\n        * @param shareData The sharing entity passed from the H5 side\n        * @return returns true to represent part of the customization, the default is false\n        */\n        @Override\n        public boolean onShareItemClick(RsBaseShareModel shareData) {\n          // It can be converted to the object needed by the App through the convertToShareModel of the shareData object, and the input parameter is the class of the model\n          AppWxMiNiProgramModel model = shareData.convertToShareModel(AppWxMiNiProgramModel.class);\n          Log.e(TAG,"onShareWithShareType model: "+model);\n          return true;\n        }\n      ...\n    };\n}\n')),(0,r.kt)("h4",{id:"share-with-vrsdk"},"Share with VRSDK"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"import Micromessage-Sharing SDK\uff1a")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},'dependencies are only available\n    ...\n    // Share (microletter)\n    api "com.tencent.mm.opensdk:wechat-sdk-android-without-mta:6.6.4"\n    api "androidx.appcompat:appcompat:1.0.0"\n    ...\n}\n')),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Add MicroMessage Share ",(0,r.kt)("inlineCode",{parentName:"li"},"key"),"\uff1a")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Initialize VR configuration and callback\nRsVrSdk.init(this, new RsVrCallBack() {\n  @Override\n  public RsAppInfo appInfo() {\n    return new RsAppInfo() {\n      ...\n        // Keys required for WeChat sharing\n        @Override\n        public String wxShareKey() {\n            return "";\n      }\n      ...\n    };\n}\n')),(0,r.kt)("h3",{id:"custom-loading"},"Custom Loading"),(0,r.kt)("p",null,"The SDK supports the operator to customize the Loading Background and Logo on the VR page."),(0,r.kt)("p",null,"When constructing ",(0,r.kt)("inlineCode",{parentName:"p"},"RsVrEntity")," , customize as follows\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'String url = "http://open-rushivr.cn/xxxxx"\nString coverUrl = "http://xxxcdn.com/loading.png";\nString logoUrl = "http://xxxcdn.com/logo.png";\n\nRsVrEntity vrEntity = new RsVrEntity(url)// VR link to open\n  .setCoverUrl(coverUrl) // Custom Loading Page Background Link without setting default background\n  .setLogoUrl(logoUrl) // Custom Loading page by default logo, recommend specification\uff1awide 306, high 111, resolution 72, background translation\n  .setLoadingType(RsLoadingType.LOADING_NULL) // Custom loadingtype (LOADING_NUL: no loading)\n  .setHideLoadingProgress(true) // Set if loading\n\nRsVrSdk.openVr(this, vrEntity);\n')),(0,r.kt)("h3",{id:"page-jump"},"Page Jump"),(0,r.kt)("p",null,"Jump inside page, H5 moves back to Apps by passing routerUrl"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Initialize VR configuration and callback\nRsVrSdk.init(this, new RsVrCallBack() {\n  @Override\n  public RsAppInfo appInfo() {\n    return new RsAppInfo() {\n      ...\n        /**\n        * Jump within the page Turn, H5 calls back to the App side by passing routerUrl\n        * @param context context context\n        * @param routerUrl jump protocol url\n        */\n        @Override\n        public void onActionRouter(Context context, String routerUrl) {\n            Log.e(TAG,"onActionRouter routerUrl: "+routerUrl);\n        }\n      ...\n    };\n  }\n')),(0,r.kt)("h3",{id:""}),(0,r.kt)("h3",{id:"custom-protocol"},"Custom Protocol"),(0,r.kt)("h4",{id:"callandbackfeed"},(0,r.kt)("inlineCode",{parentName:"h4"},"callAndBackfeed")),(0,r.kt)("p",null,"Send ",(0,r.kt)("inlineCode",{parentName:"p"},"scheme")," information to the client. The client will return to the front end when it receives the message."),(0,r.kt)("p",null,"Protocol format\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "callAndBackFeed fixed value, defined",\n  "param": {\n    "actionUrl": "a specific jsBridge",\n    "functionName": "Callback to The callback method name on the frontend side."\n  }\n}\n')),(0,r.kt)("p",null,"Frontend side\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import JSBridge from "@realsee/jsbridge-x";\n\nconst jsBridge = new JSBridge();\njsBridge.callAndBackfeed("custom/showQrCode?url=http%3A%2F%2Fwww.realsee.com");\n')),(0,r.kt)("p",null,"App side\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Initialize VR configuration and callback\nRsVrSdk.init(this, new RsVrCallBack() {\n  ...\n  // An H5-defined operation with a callback is called to the App side, and the App side can pass RsFinishBlock after processing Result returns\n  @Override\n  public void actionUrlWithFinishBlock(Context context, String actionUrl, RsFinishBlock block){\n        // parse actionUrl\n     Uri uri = Uri.parse(actionUrl);\n     if (TextUtils.equals(uri.getPath(),"/custom/showQrCode")){\n       // Get the bridge parameter\n       String qrUrl = uri.getQueryParameter("url");\n       // The example is to jump to another page showing the QR code\n       Intent intent = new Intent(context,ResultActivity.class);\n       intent.putExtra("qrUrl",qrUrl);\n       context.startActivity(intent);\n       block.onFinished(OK);\n     }\n  }\n    ...\n});\n')),(0,r.kt)("h4",{id:"callandlisten"},(0,r.kt)("inlineCode",{parentName:"h4"},"callAndListen")),(0,r.kt)("p",null,"Send ",(0,r.kt)("inlineCode",{parentName:"p"},"scheme")," information to client, client listens to changes in the status and will send back back to the frontend by callback when the status changes occur."),(0,r.kt)("p",null,"Protocol format\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "type": "callAndListen", // fixed value, already defined\n  "param": {\n      "actionUrl": "", // a specific jsBridge\n      "functionName": "App", // terminal The name of the callback method that is called back to the front end after an operation is executed.\n  }\n}\n')),(0,r.kt)("p",null,"Frontend side\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import JSBridge from "@realsee/jsbridge-x";\n\nconst jsBridge = new JSBridge();\njsBridge.callAndListen("custom/listenWebViewState", (newState) => {\n  //listener client status changed\n});\n')),(0,r.kt)("p",null,"App side\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Initialize VR configuration and callback\nRsVrSdk.init(this, new RsVrCallBack() {\n  ...\n  // An H5-defined operation with a callback is called to the App side, and the App side can pass RsFinishBlock after monitoring and processing Return the result with the change\n  @Override\n  public void actionUrlWithFinishBlock(Context context, String actionUrl, RsFinishBlock block){\n        // parse actionUrl\n     Uri uri = Uri.parse(actionUrl);\n     if (TextUtils.equals(uri.getPath(),"/custom/listenWebViewState")){\n         // Callback state starts\n       block.onFinished(CREATE);\n       ......\n         // Callback state pauses\n       block.onFinished(PAUSE);\n             ......\n       // \u56de\u8c03\u72b6\u6001 \u505c\u6b62\n       block.onFinished(STOP);\n     }\n  }\n    ...\n});\n')))}c.isMDXComponent=!0}}]);