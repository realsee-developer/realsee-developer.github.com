"use strict";(self.webpackChunkrealsee_developer_github_com=self.webpackChunkrealsee_developer_github_com||[]).push([[5500],{49613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(59496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=l(n),f=o,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(m,c(c({ref:t},u),{},{components:n})):r.createElement(m,c({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,c=new Array(i);c[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var l=2;l<i;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},77459:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var r=n(2962),o=(n(59496),n(49613));const i={title:"Invoice ticket description"},c=void 0,a={unversionedId:"front/live/faq/ticket",id:"front/live/faq/ticket",title:"Invoice ticket description",description:"What is ticket",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/front/live/faq/ticket.md",sourceDirName:"front/live/faq",slug:"/front/live/faq/ticket",permalink:"/en/docs/front/live/faq/ticket",draft:!1,tags:[],version:"current",lastUpdatedBy:"sansi.lcj",lastUpdatedAt:1669717185,formattedLastUpdatedAt:"Nov 29, 2022",frontMatter:{title:"Invoice ticket description"},sidebar:"\u5982\u89c6\u5e26\u770b",previous:{title:"Miniprogram voice",permalink:"/en/docs/front/live/function-expansion/rtc/wx"},next:{title:"Voice signature fetch",permalink:"/en/docs/front/live/faq/voice-sign"}},s={},l=[{value:"What is ticket",id:"what-is-ticket",level:2},{value:"How to get ticket",id:"how-to-get-ticket",level:2},{value:"How to pass the ticket to live sdk",id:"how-to-pass-the-ticket-to-live-sdk",level:2}],u={toc:l};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"what-is-ticket"},"What is ticket"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"ticket")," is required for access to a room."),(0,o.kt)("h2",{id:"how-to-get-ticket"},"How to get ticket"),(0,o.kt)("p",null,"The front end of the business needs to get a door ticket from the back end of the operation."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="\u793a\u4f8b getTicket \u83b7\u53d6\u65b9\u6cd5"',title:'"\u793a\u4f8b',getTicket:!0,'\u83b7\u53d6\u65b9\u6cd5"':!0},'// Request with ticket\nconst getTicket = async ({ roomCode, userId, userRole }) => {\n  return request("getTicket", {\n    // here is a simple fetch encapsulation without extra processing.\n    room_id: roomCode,\n    user_id: userId,\n    user_role: userRole,\n  })\n    .then((data) => {\n      return data.ticket;\n    })\n    .catch((error) => {\n      throw Error(error.message || "Failed to fetch door ticket");\n    });\n};\n')),(0,o.kt)("h2",{id:"how-to-pass-the-ticket-to-live-sdk"},"How to pass the ticket to live sdk"),(0,o.kt)("p",null,"The front end of the business needs to complete the way you get a ticket with a ticket ",(0,o.kt)("inlineCode",{parentName:"p"},"create()")," method, the sdk will use its own way to fetch the ticket with the user inbound while connecting to see it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="\u5728 live \u5b9e\u4f8b\u521d\u59cb\u5316\u65f6\u4f20\u5165"',title:'"\u5728',live:!0,'\u5b9e\u4f8b\u521d\u59cb\u5316\u65f6\u4f20\u5165"':!0},'import { createLive } from "@realsee/live";\n\nconst live = createLive({\n  __debug__: true, // This mode will allow debugging in terminal print logs, which is recommended when developing.\n  url: "wss://ws-access.realsee.com/***/?=xxx",\n  /* URL to connect to WebSocket services, get from your backend */\n  // highlight-start\n  getTicket: async () => {\n    return await getTicket({ roomCode, userId, userRole });\n  },\n  // highlight-end\n});\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="\u5728 connect \u8fde\u63a5\u5e26\u770b\u65f6\u4f20\u5165"',title:'"\u5728',connect:!0,'\u8fde\u63a5\u5e26\u770b\u65f6\u4f20\u5165"':!0},'import liveInstance from "../liveController/createLiveInstance";\n\nconst { useConnect } = liveInstance;\n\nconst connect = useConnect();\n\nconnect({\n  force: true,\n  url: wsUrl,\n  // highlight-start\n  getTicket: async () => {\n    return await getTicket({ roomCode, userId, userRole });\n  },\n  // highlight-end\n});\n')))}p.isMDXComponent=!0}}]);