"use strict";(self.webpackChunkrealsee_developer_github_com=self.webpackChunkrealsee_developer_github_com||[]).push([[828],{3905:(e,n,a)=>{a.d(n,{Zo:()=>u,kt:()=>v});var t=a(67294);function l(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function r(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){l(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,l=function(e,n){if(null==e)return{};var a,t,l={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(l[a]=e[a]);return l}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=t.createContext({}),s=function(e){var n=t.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):r(r({},n),e)),a},u=function(e){var n=s(e.components);return t.createElement(p.Provider,{value:n},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,l=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(a),m=l,v=d["".concat(p,".").concat(m)]||d[m]||c[m]||o;return a?t.createElement(v,r(r({ref:n},u),{},{components:a})):t.createElement(v,r({ref:n},u))}));function v(e,n){var a=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var o=a.length,r=new Array(o);r[0]=m;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[d]="string"==typeof e?e:l,r[1]=i;for(var s=2;s<o;s++)r[s]=a[s];return t.createElement.apply(null,r)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},85162:(e,n,a)=>{a.d(n,{Z:()=>r});var t=a(67294),l=a(86010);const o={tabItem:"tabItem_Ymn6"};function r(e){let{children:n,hidden:a,className:r}=e;return t.createElement("div",{role:"tabpanel",className:(0,l.Z)(o.tabItem,r),hidden:a},n)}},65488:(e,n,a)=>{a.d(n,{Z:()=>c});var t=a(87462),l=a(67294),o=a(86010),r=a(72389),i=a(67392),p=a(7094),s=a(12466);const u={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function d(e){const{lazy:n,block:a,defaultValue:r,values:d,groupId:c,className:m}=e,v=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=d??v.map((e=>{let{props:{value:n,label:a,attributes:t}}=e;return{value:n,label:a,attributes:t}})),f=(0,i.l)(g,((e,n)=>e.value===n.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===r?r:r??v.find((e=>e.props.default))?.props.value??v[0].props.value;if(null!==h&&!g.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:b}=(0,p.U)(),[w,y]=(0,l.useState)(h),N=[],{blockElementScrollPositionUntilNextRender:P}=(0,s.o5)();if(null!=c){const e=k[c];null!=e&&e!==w&&g.some((n=>n.value===e))&&y(e)}const T=e=>{const n=e.currentTarget,a=N.indexOf(n),t=g[a].value;t!==w&&(P(n),y(t),null!=c&&b(c,String(t)))},F=e=>{let n=null;switch(e.key){case"Enter":T(e);break;case"ArrowRight":{const a=N.indexOf(e.currentTarget)+1;n=N[a]??N[0];break}case"ArrowLeft":{const a=N.indexOf(e.currentTarget)-1;n=N[a]??N[N.length-1];break}}n?.focus()};return l.createElement("div",{className:(0,o.Z)("tabs-container",u.tabList)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},m)},g.map((e=>{let{value:n,label:a,attributes:r}=e;return l.createElement("li",(0,t.Z)({role:"tab",tabIndex:w===n?0:-1,"aria-selected":w===n,key:n,ref:e=>N.push(e),onKeyDown:F,onClick:T},r,{className:(0,o.Z)("tabs__item",u.tabItem,r?.className,{"tabs__item--active":w===n})}),a??n)}))),n?(0,l.cloneElement)(v.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},v.map(((e,n)=>(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==w})))))}function c(e){const n=(0,r.Z)();return l.createElement(d,(0,t.Z)({key:String(n)},e))}},61539:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>u,contentTitle:()=>p,default:()=>v,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var t=a(87462),l=(a(67294),a(3905)),o=a(65488),r=a(85162);const i={title:"\ud83d\udce6 overview model household chart"},p=void 0,s={unversionedId:"front/3d-space/advanced/dnalogel/floorplan/TopviewFloorplanPlugin",id:"front/3d-space/advanced/dnalogel/floorplan/TopviewFloorplanPlugin",title:"\ud83d\udce6 overview model household chart",description:"TopviewFloorplanPlugin",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/front/3d-space/advanced/dnalogel/floorplan/TopviewFloorplanPlugin.md",sourceDirName:"front/3d-space/advanced/dnalogel/floorplan",slug:"/front/3d-space/advanced/dnalogel/floorplan/TopviewFloorplanPlugin",permalink:"/en/docs/front/3d-space/advanced/dnalogel/floorplan/TopviewFloorplanPlugin",draft:!1,tags:[],version:"current",lastUpdatedBy:"sansi.lcj",lastUpdatedAt:1669717185,formattedLastUpdatedAt:"Nov 29, 2022",frontMatter:{title:"\ud83d\udce6 overview model household chart"},sidebar:"\u4e09\u7ef4\u7a7a\u95f4",previous:{title:"\ud83d\udce6 large spatial model household chart",permalink:"/en/docs/front/3d-space/advanced/dnalogel/floorplan/MapViewFloorplanPlugin"},next:{title:"Model Label",permalink:"/en/docs/front/3d-space/advanced/dnalogel/ModelRoomLabelPlugin"}},u={},d=[{value:"<strong>TopviewFloorplanPlugin</strong>",id:"topviewfloorplanplugin",level:2},{value:"Example effect",id:"example-effect",level:2},{value:"Function Description",id:"function-description",level:2},{value:"Install reference",id:"install-reference",level:2},{value:"Development Guides",id:"development-guides",level:2},{value:"Initialize",id:"initialize",level:3},{value:"React initialization",id:"react-initialization",level:3},{value:"Vue initialization",id:"vue-initialization",level:3},{value:"Load data",id:"load-data",level:3},{value:"Core approach",id:"core-approach",level:3},{value:"demo source reference",id:"demo-source-reference",level:2}],c={toc:d},m="wrapper";function v(e){let{components:n,...a}=e;return(0,l.kt)(m,(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"topviewfloorplanplugin"},(0,l.kt)("strong",{parentName:"h2"},"TopviewFloorplanPlugin")),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"This plugin is dependent on",(0,l.kt)("strong",{parentName:"mdxAdmonitionTitle"},"household diagram data"),", please learn how to get household chart data first.")),(0,l.kt)("h2",{id:"example-effect"},"Example effect"),(0,l.kt)("p",null,"Tap",(0,l.kt)("strong",{parentName:"p"},"to view model"),"button to see the home map display in subview model status."),(0,l.kt)("div",{className:"docs-vr-normal"},(0,l.kt)("iframe",{className:"docs-vr-iframe",src:"https://realsee.js.org/dnalogel/src/TopviewFloorplanPlugin/index.html"})),(0,l.kt)("h2",{id:"function-description"},"Function Description"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Overview model household diagram plugin")," seamlessly integrates a set of household diagrams based on VR 3D model status."),(0,l.kt)("p",null,"Its function is a simplified version of Model Floor Plan Plugin ",(0,l.kt)("a",{parentName:"p",href:"/en/docs/front/3d-space/advanced/dnalogel/floorplan/ModelFloorplanPlugin"},"ModelFloorplanPlugin")," , only",(0,l.kt)("strong",{parentName:"p"},"display capabilities"),", related usage and API can directly refer to ",(0,l.kt)("a",{parentName:"p",href:"/en/docs/front/3d-space/advanced/dnalogel/floorplan/ModelFloorplanPlugin"},"ModelFloorplanPlugin"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Distinction\uff1a")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Overview model household image plugin")," is bound to ",(0,l.kt)("inlineCode",{parentName:"p"},"live")," instance ",(0,l.kt)("inlineCode",{parentName:"p"},"Mode")," status\uff1awhen ",(0,l.kt)("inlineCode",{parentName:"p"},"five.mode")," is ",(0,l.kt)("inlineCode",{parentName:"p"},"Five.Mode.Topview")," when animation is executed, the two-dimensional household pattern module is shown automatically.When it is not in the state of",(0,l.kt)("inlineCode",{parentName:"p"},"Five.Mode.Topview")," , the two-dimensional floor plan module is automatically hidden."),(0,l.kt)("p",null,"So you can use ",(0,l.kt)("inlineCode",{parentName:"p"},"five.mode")," to indirectly control display and hide the two-dimensional household map module.The other successful medical APIs are exactly the same."),(0,l.kt)("h2",{id:"install-reference"},"Install reference"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Please choose ",(0,l.kt)("inlineCode",{parentName:"strong"},"yarn")," or ",(0,l.kt)("inlineCode",{parentName:"strong"},"npm")," installation method\uff1aas needed")),(0,l.kt)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @realsee/dnalogel\n"))),(0,l.kt)(r.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @realsee/dnalogel\n"))),(0,l.kt)(r.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add @realsee/dnalogel\n")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"By es reference\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},'import { TopviewFloorplanPlugin } from "@realsee/dnagel"\n')),(0,l.kt)("h2",{id:"development-guides"},"Development Guides"),(0,l.kt)("h3",{id:"initialize"},"Initialize"),(0,l.kt)("p",null,"When initializing ",(0,l.kt)("inlineCode",{parentName:"p"},"Five")," instances, configure ",(0,l.kt)("inlineCode",{parentName:"p"},"TopviewFloorplanPlugin")," in initialize plugin parameters."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"import { Five } from '@realsee/five'\n\nconst five = new Five({\n    plugins: [\n        [\n            TopviewFloorplanPlugin,\n            'topviewFloorplanPlugin', // custom plugin name\n            {\n                // example parameter configuration\n                selector: '. plugin-full-screen-container', // Replace with your container node\n                hoverEnable: true\n                /** Whether to enable the zoom in and out and drag functions, the default is false */\n                // gestureEnable?: boolean \n            }\n        ]\n    ]\n})\n")),(0,l.kt)("h3",{id:"react-initialization"},"React initialization"),(0,l.kt)("p",null,"When creating ",(0,l.kt)("inlineCode",{parentName:"p"},"FiveProvider")," , configure ",(0,l.kt)("inlineCode",{parentName:"p"},"TopviewFloorplanPlugin")," in initialize plugin parameters."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"import { TopviewFloorplanPlugin } from \"@realsee/dnalogel\";\nimport { createFiveProvider, FiveCanvas } from \"@realsee/five/react\";\n\nconst FiveProvider = createFiveProvider({\n    plugins: [\n        [\n            TopviewFloorplanPlugin,\n            'topviewFloorplanPlugin', // Custom plugin name\n            {\n                // Example parameter configuration\n                selector: '. lugin-full-screen-container', // Replace with your container node\n                hoverEnable: true\n                /** Enable zoom and drag feature, Consider false */\n                // gestureEnable? boolean \n            }\n        ]\n    ]\n});\n")),(0,l.kt)("h3",{id:"vue-initialization"},"Vue initialization"),(0,l.kt)("p",null,"When using ",(0,l.kt)("inlineCode",{parentName:"p"},"FiveProvider")," , configure ",(0,l.kt)("inlineCode",{parentName:"p"},"TopviewFloorplanPlugin")," in initialize plugin parameters."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vue"},'<template>\n  <FiveProvider :fiveInitArgs="fiveInitArgs">\n  </FiveProvider>\n</template>\n<script setup>\nimport TopviewFloorplanPlugin from "@realsee/dnalogel/libs/TopviewFloorplanPlugin";\nimport { FiveProvider, FiveCanvas } from "@realsee/five/vue";\nconst fiveInitArgs = {\n    plugins: [\n        [\n            TopviewFloorplanPlugin,\n            \'topviewFloorplanPlugin\', // Custom plugin name\n            {\n                // Parameter configuration\n            }\n        ]\n    ]\n}\n<\/script>\n')),(0,l.kt)("h3",{id:"load-data"},"Load data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// Gets an instance of a plugin, where `topviewFloorplanPlugin` is a custom name on initialization\nconst pluginInstance = five.plugins.topviewFloorplanPlugin \n\n// Call `load` method to load household diagram data\npluginInstance.load(floorplanServerData)\n")),(0,l.kt)("h3",{id:"core-approach"},"Core approach"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"There are\uff1acore methods provided by TopviewFloorplanPlugin")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"load(data: FloorplanServerData)")," Load household chart data")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"You need to manually load the floor plan data, please read",(0,l.kt)("a",{parentName:"p",href:"https://open-platform.realsee.com/developer/open/api#/"},"for the data source of[FloorplanServerData] such as the open platform API"),".")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"appendTo(wrapper: Element)")," Mount DOM nodes")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Load the household chart DOM module into your HTML structure.")),(0,l.kt)("h2",{id:"demo-source-reference"},"demo source reference"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/realsee-developer/dnalogel/tree/main/examples/src"},"demo source reference")))}v.isMDXComponent=!0}}]);