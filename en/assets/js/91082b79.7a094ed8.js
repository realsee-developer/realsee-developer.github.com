"use strict";(self.webpackChunkrealsee_developer_github_com=self.webpackChunkrealsee_developer_github_com||[]).push([[386],{49613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(59496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,v=d["".concat(l,".").concat(m)]||d[m]||p[m]||r;return n?a.createElement(v,i(i({ref:t},u),{},{components:n})):a.createElement(v,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},29636:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(59496),o=n(45924);const r="tabItem_y69N";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,i),hidden:n},t)}},26725:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(2962),o=n(59496),r=n(45924),i=n(48487),c=n(16580),l=n(75187),s=n(14644);const u="tabList_bRhb",p="tabItem_WY7u";function d(e){var t;const{lazy:n,block:i,defaultValue:d,values:m,groupId:v,className:h}=e,f=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=m??f.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),g=(0,c.l)(k,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===d?d:d??(null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)??f[0].props.value;if(null!==y&&!k.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:N}=(0,l.U)(),[C,w]=(0,o.useState)(y),T=[],{blockElementScrollPositionUntilNextRender:x}=(0,s.o5)();if(null!=v){const e=b[v];null!=e&&e!==C&&k.some((t=>t.value===e))&&w(e)}const R=e=>{const t=e.currentTarget,n=T.indexOf(t),a=k[n].value;a!==C&&(x(t),w(a),null!=v&&N(v,String(a)))},L=e=>{var t;let n=null;switch(e.key){case"Enter":R(e);break;case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;n=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;n=T[t]??T[T.length-1];break}}null==(t=n)||t.focus()};return o.createElement("div",{className:(0,r.Z)("tabs-container",u)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":i},h)},k.map((e=>{let{value:t,label:n,attributes:i}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:e=>T.push(e),onKeyDown:L,onClick:R},i,{className:(0,r.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":C===t})}),n??t)}))),n?(0,o.cloneElement)(f.filter((e=>e.props.value===C))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==C})))))}function m(e){const t=(0,i.Z)();return o.createElement(d,(0,a.Z)({key:String(t)},e))}},64592:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>c,metadata:()=>s,toc:()=>p});var a=n(2962),o=(n(59496),n(49613)),r=n(26725),i=n(29636);const c={title:"Attach connection"},l=void 0,s={unversionedId:"front/live/get-started/live-connect",id:"front/live/get-started/live-connect",title:"Attach connection",description:"This description does not take into account the ability to view the voice.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/front/live/get-started/01.live-connect.md",sourceDirName:"front/live/get-started",slug:"/front/live/get-started/live-connect",permalink:"/en/docs/front/live/get-started/live-connect",draft:!1,tags:[],version:"current",lastUpdatedBy:"sansi.lcj",lastUpdatedAt:1669717185,formattedLastUpdatedAt:"Nov 29, 2022",sidebarPosition:1,frontMatter:{title:"Attach connection"},sidebar:"\u5982\u89c6\u5e26\u770b",previous:{title:"Dependency Installation",permalink:"/en/docs/front/live/get-started/install"},next:{title:"Take View Out",permalink:"/en/docs/front/live/get-started/live-exit"}},u={},p=[{value:"No Frame Example",id:"no-frame-example",level:2},{value:"Create Instance",id:"create-instance",level:3},{value:"Connections Belt",id:"connections-belt",level:3},{value:"3. Successful connection identifier",id:"3-successful-connection-identifier",level:3},{value:"React Example",id:"react-example",level:2},{value:"Create Instance",id:"create-instance-1",level:3},{value:"Integration context",id:"integration-context",level:3},{value:"3 - Connections Belt",id:"3---connections-belt",level:3},{value:"4 - Identification of successful connections",id:"4---identification-of-successful-connections",level:3}],d={toc:p};function m(e){let{components:t,...c}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,c,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This description does not take into account the ability to view the voice.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Please select the sample instructions to view according to the actual development framework.")),(0,o.kt)("h2",{id:"no-frame-example"},"No Frame Example"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"This indicates that you are using native ",(0,o.kt)("inlineCode",{parentName:"strong"},"js")," | ",(0,o.kt)("inlineCode",{parentName:"strong"},"ts")," for app development.")),(0,o.kt)("h3",{id:"create-instance"},"Create Instance"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { createLive } from "@realsee/live";\n\nconst live = createLive({\n  __debug__: true, // This mode will allow debugging in terminal print logs, which is recommended when developing.\n  url: "wss://ws-access.realsee.com/***/?=xxx" /* URL to connect to WebSocket service, get it from your backend */,\n  getTicket: async () => {\n    /* Get the callback function with "ticket" */\n  },\n});\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Two arguments configured when creating live instance\uff1a")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"url"),"\uff1aThe URL to connect to the WebSocket service. If you do not know the URL at the stage of creating a live instance, you can use the ",(0,o.kt)("inlineCode",{parentName:"li"},"live.connect({ url })")," method to make a WebSocket connection at the right time."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"getTicket()"),"\uff1ais an asynchronous callback function with a return value of ",(0,o.kt)("strong",{parentName:"li"},'"Door" connected to WebSocket service,'),"for how to get a ticket see the VR Belt API.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"for ",(0,o.kt)("inlineCode",{parentName:"p"},"createLive()")," for more function configuration refer to ",(0,o.kt)("a",{parentName:"p",href:"https://unpkg.com/@realsee/live@0.2.0-alpha.1/docs/interfaces/live.LiveOptions.html"},"LiveOptions"),".")),(0,o.kt)("h3",{id:"connections-belt"},"Connections Belt"),(0,o.kt)("p",null,"After obtaining the ",(0,o.kt)("inlineCode",{parentName:"p"},"live")," instance, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"connect()")," method at an appropriate time to connect with viewing."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// Make sure you get an instance of `live` with a simple `console.log(live)`.\nlive.connect();\n")),(0,o.kt)("h3",{id:"3-successful-connection-identifier"},"3. Successful connection identifier"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"by ",(0,o.kt)("inlineCode",{parentName:"p"},"live.on")," listening ",(0,o.kt)("inlineCode",{parentName:"p"},"readyKeyframeSync")," events were informed about whether the interaction with the screen was successfully created")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'live.on("readyKeyframeSync", (lastframe) => {\n  console.log("Successful Enrollment");\n});\n')),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can also quickly see whether you are connected to the console or not.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"live-connect-success",src:n(68014).Z,width:"2576",height:"884"})),(0,o.kt)("p",null,"As shown in the graph above, if ",(0,o.kt)("inlineCode",{parentName:"p"},"ROOM_INO"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"SELF_USER_INFO"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"USER_LIST"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RTC_INT")," all four instructions (command) code and messaging are ",(0,o.kt)("inlineCode",{parentName:"p"},"SUCCESS"),"the link is successful."),(0,o.kt)("h2",{id:"react-example"},"React Example"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"This indicates that you use the ",(0,o.kt)("inlineCode",{parentName:"strong"},"React")," framework for app development.")),(0,o.kt)("h3",{id:"create-instance-1"},"Create Instance"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"New file ",(0,o.kt)("inlineCode",{parentName:"p"},"LiveReact.js")," | ",(0,o.kt)("inlineCode",{parentName:"p"},"LiveReact.ts")," and create your own LiveReact instance")),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title='LiveReact.js'",title:"'LiveReact.js'"},'import { createLiveReact } from "@realsee/live";\n\nconst LiveReact = createLiveReact({\n  __debug__: true,\n});\n\nexport default LiveReact;\n\n/** if you do not like `LiveReact. iveProvider`, such programming habits that you can "throw */\n// export const LiveProvider = liveReactInstance.LiveProvider\n// export const useConnect = liveReactInstance. seConnect\n// export const useKeyframe = liveReactInstance.useKeyframe\n// export...\n'))),(0,o.kt)(i.Z,{value:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title='LiveReact.ts'",title:"'LiveReact.ts'"},'import { createLiveReact } from "@realsee/live";\nimport { Mode } from "@relasee/five";\n\n/** Define frame data snapshot structure*/\ninterface Snapshot {\n  /** Take the Five state snapshot as an example*/\n  FiveState: {\n    panoIndex: number;\n    fov: number;\n    mode: Mode;\n    latitude: number;\n    longitude: number;\n  };\n}\n\n/** Create an instance through `createLiveReact()` function* /\nconst LiveReact = createLiveReact<Snapshot>({\n    __debug__: true\n})\n\nexport default LiveReact\n\n/** if you do not like such programming habits as `LiveReact.LiveProvider`, you can "drop "hold */\n// export const LiveProvider = LiveReact. iveProvider\n// export const useConnect = LiveReact.useConnect\n// export const useKeyframe = LiveReact.useKeyframe\n// export...\n')))),(0,o.kt)("h3",{id:"integration-context"},"Integration context"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Integrate ",(0,o.kt)("inlineCode",{parentName:"p"},"live")," instances into ",(0,o.kt)("inlineCode",{parentName:"p"},"React")," 's ",(0,o.kt)("inlineCode",{parentName:"p"},"Context")," context through ",(0,o.kt)("inlineCode",{parentName:"p"},"LiveProvider"),".")),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'ReactDOM.render(\n  <LiveProvider>\n    <App />\n  </LiveProvider>,\n  document.getElementById("root") // Please change this to your container\n);\n'))),(0,o.kt)(i.Z,{value:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'ReactDOM.render(\n  <LiveProvider>\n    <App />\n  </LiveProvider>,\n  document.getElementById("root") // Please change this to your container\n);\n')))),(0,o.kt)("h3",{id:"3---connections-belt"},"3 - Connections Belt"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Use ",(0,o.kt)("inlineCode",{parentName:"p"},"useConnect")," hook to see connections.")),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"JavaScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import { useConnect } from "./LiveReact";\n\nfunction ConnectBtn() {\n  // highlight-start\n  const connect = useConnect();\n  //  highlight-end\n\n  const handleConnect = () => {\n    return Promise.resolve().then(() => {\n      // highlight-start\n      connect({\n        force: true,\n        url: wsUrl, // ws connection gets from your backend\n        getTicket: async () => {\n          // Take a look at the ticket callback method\n          return await requestTicket({ roomCode, userId, userRole });\n        },\n      });\n      //  highlight-end\n    });\n  };\n\n  return (\n    <button onClick={() => handleConnect()}>\n      connect with the look at the example button\n    </button>\n  );\n}\n\nconst requestTicket = async ({ roomCode, userId, userRole }) => {\n  // request backend interface, return ticket\n  return ""; // string\n};\n'))),(0,o.kt)(i.Z,{value:"TypeScript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { useConnect } from "./LiveReact";\n\nfunction ConnectBtn() {\n  // highlight-start\n  const connect = useConnect();\n  //  highlight-end\n\n  const handleConnect = () => {\n    return Promise.resolve().then(() => {\n      // highlight-start\n      connect({\n        force: true,\n        url: wsUrl, // ws connection fetch from your backend\n        getTicket: async () => {\n          // Take a look at the ticket callback method\n          return await requestTicket({\n            roomCode: string,\n            userId: string,\n            userRole: string,\n          });\n        },\n      });\n      //  highlight-end\n    });\n  };\n\n  return (\n    <button onClick={() => handleConnect()}>\n      connect with the look at the example button\n    </button>\n  );\n}\n\nconst requestTicket = async ({\n  roomCode,\n  userId,\n  userRole,\n}: {\n  string;\n  string;\n  string;\n}) => {\n  // Request backend interface, return ticket\n  return ""; // string\n};\n')))),(0,o.kt)("h3",{id:"4---identification-of-successful-connections"},"4 - Identification of successful connections"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Listen to ",(0,o.kt)("inlineCode",{parentName:"p"},"useLiveEventCallback")," hook to list ",(0,o.kt)("inlineCode",{parentName:"p"},"readyKeyframeSync")," Event to see if the interface with the screen was successfully created :")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// Set up with the channel, homescreen data sync\nuseLiveEventCallback("readyKeyframeSync", (lastKeyframe) => {\n  // live channel ready\n  console.log("Successful Access with Watch");\n\n  // recover first screen frame\n  if (JSON.stringify(lastKeyframe) !== "{}") {\n    // If lastKeyframe does not exist, there is no frame data, Scene recovery required\n    for (const key in lastKeyframe) {\n      if (lastKeyframe.hasOwnProperty(key)) {\n        switch (key) {\n          case "FiveState":\n            setDefaultFiveState(lastKeyframe[key]);\n            break;\n          default:\n            return;\n        }\n      }\n    }\n  }\n});\n')),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can also quickly see whether you are connected to the console or not.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"live-connect-success",src:n(68014).Z,width:"2576",height:"884"})),(0,o.kt)("p",null,"As shown in the graph above, if ",(0,o.kt)("inlineCode",{parentName:"p"},"ROOM_INO"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"SELF_USER_INFO"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"USER_LIST"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RTC_INT")," all four instructions (command) code and messaging are ",(0,o.kt)("inlineCode",{parentName:"p"},"SUCCESS"),"the link is successful."))}m.isMDXComponent=!0},68014:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/live-connect-success-22319562f8f318ca3b6af63938742ad8.png"}}]);