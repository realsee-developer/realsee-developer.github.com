"use strict";(self.webpackChunkrealsee_developer_github_com=self.webpackChunkrealsee_developer_github_com||[]).push([[2792],{49613:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>f});var r=t(59496);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(t),f=o,g=p["".concat(s,".").concat(f)]||p[f]||u[f]||i;return t?r.createElement(g,a(a({ref:n},d),{},{components:t})):r.createElement(g,a({ref:n},d))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},67227:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(2962),o=(t(59496),t(49613));const i={title:"iOS Voice Integration"},a=void 0,l={unversionedId:"front/live/function-expansion/rtc/ios",id:"front/live/function-expansion/rtc/ios",title:"iOS Voice Integration",description:"iOS voice integrated documents only for iOS client developers.There is no need for additional treatment by developers on other ends and there is natural support for multiple-end audio belts as long as the voices of all sides are secured.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/front/live/function-expansion/rtc/ios.md",sourceDirName:"front/live/function-expansion/rtc",slug:"/front/live/function-expansion/rtc/ios",permalink:"/en/docs/front/live/function-expansion/rtc/ios",draft:!1,tags:[],version:"current",lastUpdatedBy:"sansi.lcj",lastUpdatedAt:1669717185,formattedLastUpdatedAt:"Nov 29, 2022",frontMatter:{title:"iOS Voice Integration"},sidebar:"\u5982\u89c6\u5e26\u770b",previous:{title:"Android Voice Integration",permalink:"/en/docs/front/live/function-expansion/rtc/android"},next:{title:"Miniprogram voice",permalink:"/en/docs/front/live/function-expansion/rtc/wx"}},s={},c=[{value:"Dependencies added",id:"dependencies-added",level:2},{value:"Login Validation",id:"login-validation",level:2}],d={toc:c};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"hint",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"iOS voice integrated documents only for iOS client developers.There is no need for additional treatment by developers on other ends and there is natural support for multiple-end audio belts as long as the voices of all sides are secured.")),(0,o.kt)("p",null,"::caution",(0,o.kt)("br",{parentName:"p"}),"\n","Before you start, make sure you have integrated ",(0,o.kt)("inlineCode",{parentName:"p"},"iOS SDK"),", and if you have not integrated ",(0,o.kt)("inlineCode",{parentName:"p"},"iOS SDK"),", jump to ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/en/docs/webview/app/iOS"},"iOS SDK integration"))," documentation.\n:::"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The SDK uses Tencent Voice (Trtc) to realize voice synchronization during the process of watching with video. To use the video with video function, the following steps are required\uff1a")),(0,o.kt)("h2",{id:"dependencies-added"},"Dependencies added"),(0,o.kt)("p",null,"Require separate introduction of Tencent Voice Library, modify ",(0,o.kt)("strong",{parentName:"p"},"Podfile")," file, add dependency"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-groovy"},"# Voice (Tencent Yuntc)\npod 'TXLiteAVSDK_TRTC', '8.7.10102'\n")),(0,o.kt)("h2",{id:"login-validation"},"Login Validation"),(0,o.kt)("p",null,"A user login status needs to be checked, the SDK needs to get the current user login token to verify validity, and needs to provide a method for retrieving user's information, i.e."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-objectivec"},'// Returns the latest user login token\n[RSVRSDKConfig shareInstance].accessToken = ^NSString * _Nullable{\n    return [[NSUserDefaults standardUserDefaults] valueForKey:@"login_token"];\n};\n// Return to the latest user ID\n[RSVRSDKConfig shareInstance].userId = ^NSString * _Nullable{\n    return [[NSUserDefaults standardUserDefaults] valueForKey:@"login_user_id"];\n};\n// Return to the latest user\n[RSVRSDKConfig shareInstance].userName = ^NSString * _Nullable{\n    return [[NSUserDefaults standardUserDefaults] valueForKey:@"login_user_name"];\n};\n')),(0,o.kt)("p",null,"When the validation results are not logged in or invalid login information, jump on the app login, the SDK login by setting up RSVRSDKDelegate"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-objective-c"},"[RSVRSDKConfig shareInstance].configDelegate = self;\n")),(0,o.kt)("p",null,"Methods to implement RSVRSDKDelegate:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-objectivec"},"#pragma RSVRSDKDelegate\n\n// needs to be implemented in this proxy method to wake up login interface.\n/// @param didUserLoginBlock needs to be activated when users log in, then use this block\n- (void)actionLogin:(dispatch_block_t)didUserLoginBlock\n{\n    self.loginBlockAction = didUserLoginBlock;\n    LoginViewController* loginVc = [[LoginViewController alloc] init];\n    [self.navigationController pushViewController:loginVc animated:YES];\n}\n....\n")),(0,o.kt)("p",null,"H5 On receipt of a successful login notification, the method of retrieving user information will be redeployed, updated information will be obtained, validated and initiated."))}u.isMDXComponent=!0}}]);