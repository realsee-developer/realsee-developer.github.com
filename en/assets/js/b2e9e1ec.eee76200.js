"use strict";(self.webpackChunkrealsee_developer_github_com=self.webpackChunkrealsee_developer_github_com||[]).push([[5038],{3905:(e,a,n)=>{n.d(a,{Zo:()=>d,kt:()=>g});var t=n(67294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=t.createContext({}),s=function(e){var a=t.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},d=function(e){var a=s(e.components);return t.createElement(p.Provider,{value:a},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,g=u["".concat(p,".").concat(m)]||u[m]||c[m]||l;return n?t.createElement(g,o(o({ref:a},d),{},{components:n})):t.createElement(g,o({ref:a},d))}));function g(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var p in a)hasOwnProperty.call(a,p)&&(i[p]=a[p]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,a,n)=>{n.d(a,{Z:()=>o});var t=n(67294),r=n(86010);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:a,hidden:n,className:o}=e;return t.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:n},a)}},65488:(e,a,n)=>{n.d(a,{Z:()=>c});var t=n(87462),r=n(67294),l=n(86010),o=n(72389),i=n(67392),p=n(7094),s=n(12466);const d={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function u(e){const{lazy:a,block:n,defaultValue:o,values:u,groupId:c,className:m}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=u??g.map((e=>{let{props:{value:a,label:n,attributes:t}}=e;return{value:a,label:n,attributes:t}})),h=(0,i.l)(f,((e,a)=>e.value===a.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===o?o:o??g.find((e=>e.props.default))?.props.value??g[0].props.value;if(null!==v&&!f.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:b}=(0,p.U)(),[N,P]=(0,r.useState)(v),y=[],{blockElementScrollPositionUntilNextRender:w}=(0,s.o5)();if(null!=c){const e=k[c];null!=e&&e!==N&&f.some((a=>a.value===e))&&P(e)}const F=e=>{const a=e.currentTarget,n=y.indexOf(a),t=f[n].value;t!==N&&(w(a),P(t),null!=c&&b(c,String(t)))},C=e=>{let a=null;switch(e.key){case"Enter":F(e);break;case"ArrowRight":{const n=y.indexOf(e.currentTarget)+1;a=y[n]??y[0];break}case"ArrowLeft":{const n=y.indexOf(e.currentTarget)-1;a=y[n]??y[y.length-1];break}}a?.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",d.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},m)},f.map((e=>{let{value:a,label:n,attributes:o}=e;return r.createElement("li",(0,t.Z)({role:"tab",tabIndex:N===a?0:-1,"aria-selected":N===a,key:a,ref:e=>y.push(e),onKeyDown:C,onClick:F},o,{className:(0,l.Z)("tabs__item",d.tabItem,o?.className,{"tabs__item--active":N===a})}),n??a)}))),a?(0,r.cloneElement)(g.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==N})))))}function c(e){const a=(0,o.Z)();return r.createElement(u,(0,t.Z)({key:String(a)},e))}},9434:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>p,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var t=n(87462),r=(n(67294),n(3905)),l=n(65488),o=n(85162);const i={title:"\ud83d\udce6 panorama radar map"},p=void 0,s={unversionedId:"front/3d-space/advanced/dnalogel/floorplan/PanoFloorplanRadarPlugin",id:"front/3d-space/advanced/dnalogel/floorplan/PanoFloorplanRadarPlugin",title:"\ud83d\udce6 panorama radar map",description:"PanoFloorplanRadarPlugin",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/front/3d-space/advanced/dnalogel/floorplan/PanoFloorplanRadarPlugin.md",sourceDirName:"front/3d-space/advanced/dnalogel/floorplan",slug:"/front/3d-space/advanced/dnalogel/floorplan/PanoFloorplanRadarPlugin",permalink:"/en/docs/front/3d-space/advanced/dnalogel/floorplan/PanoFloorplanRadarPlugin",draft:!1,tags:[],version:"current",lastUpdatedBy:"lichengjie003",lastUpdatedAt:1684216246,formattedLastUpdatedAt:"May 16, 2023",frontMatter:{title:"\ud83d\udce6 panorama radar map"},sidebar:"\u4e09\u7ef4\u7a7a\u95f4",previous:{title:"Household chart fetch \ud83c\udf1f",permalink:"/en/docs/front/3d-space/advanced/dnalogel/floorplan/getFloorplanData"},next:{title:"\ud83d\udce6 model household graph",permalink:"/en/docs/front/3d-space/advanced/dnalogel/floorplan/ModelFloorplanPlugin"}},d={},u=[{value:"<strong>PanoFloorplanRadarPlugin</strong>",id:"panofloorplanradarplugin",level:2},{value:"Example effect",id:"example-effect",level:2},{value:"Function Description",id:"function-description",level:2},{value:"Install reference",id:"install-reference",level:2},{value:"Development Guides",id:"development-guides",level:2},{value:"Initialize",id:"initialize",level:3},{value:"React initialization",id:"react-initialization",level:3},{value:"Vue initialization",id:"vue-initialization",level:3},{value:"Load data",id:"load-data",level:3},{value:"Core approach",id:"core-approach",level:3},{value:"Show extra content on radar",id:"show-extra-content-on-radar",level:3},{value:"Configure Parameters",id:"configure-parameters",level:3},{value:"demo source reference",id:"demo-source-reference",level:2}],c=(m="PlaygroundCard",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var m;const g={toc:u},f="wrapper";function h(e){let{components:a,...n}=e;return(0,r.kt)(f,(0,t.Z)({},g,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"panofloorplanradarplugin"},(0,r.kt)("strong",{parentName:"h2"},"PanoFloorplanRadarPlugin")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"This plugin is dependent on",(0,r.kt)("strong",{parentName:"mdxAdmonitionTitle"},"household diagram data"),", please learn how to get household chart data first.")),(0,r.kt)("h2",{id:"example-effect"},"Example effect"),(0,r.kt)("div",{className:"docs-vr-normal"},(0,r.kt)("iframe",{className:"docs-vr-iframe",src:"https://realsee-developer.github.io/dnalogel/src/PanoFloorplanRadarPlugin/index.html"})),(0,r.kt)(c,{url:"https://stackblitz.com/edit/panofloorplanradarplugin",mdxType:"PlaygroundCard"}),(0,r.kt)("h2",{id:"function-description"},"Function Description"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"House Type Radar Map Plug-in")," provides the function of displaying a two-dimensional house type map in the panorama mode."),(0,r.kt)("p",null,"Supported features are\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Radar guidelines\uff1ashow the location and direction of the current point in a "radar" icon.'),(0,r.kt)("li",{parentName:"ul"},"Household chart adaptive fill\uff1aminimum size is automatically calculated to ensure display in DOM container center."),(0,r.kt)("li",{parentName:"ul"},"Changes to the floors in the panorama mode will automatically switch to the household chart of the current floor."),(0,r.kt)("li",{parentName:"ul"},"When configuring ",(0,r.kt)("inlineCode",{parentName:"li"},"hoverEnable")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," (default configuration), the mouse ",(0,r.kt)("inlineCode",{parentName:"li"},"hover")," will be highlighted between the relevant segments.")),(0,r.kt)("h2",{id:"install-reference"},"Install reference"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Please choose ",(0,r.kt)("inlineCode",{parentName:"strong"},"yarn")," or ",(0,r.kt)("inlineCode",{parentName:"strong"},"npm")," installation method\uff1aas needed")),(0,r.kt)(l.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @realsee/dnalogel\n"))),(0,r.kt)(o.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @realsee/dnalogel\n"))),(0,r.kt)(o.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add @realsee/dnalogel\n")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"By es reference\uff1a")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { PanoFloorplanRadarPlugin } from "@realsee/dnalogel"\n')),(0,r.kt)("h2",{id:"development-guides"},"Development Guides"),(0,r.kt)("h3",{id:"initialize"},"Initialize"),(0,r.kt)("p",null,"When initializing ",(0,r.kt)("inlineCode",{parentName:"p"},"Five")," instances, configure ",(0,r.kt)("inlineCode",{parentName:"p"},"PanoFloorplanRadarPlugin")," in initialize plugin parameters."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import Five from '@realsee/five'\nimport { PanoFloorplanRadarPlugin } from \"@realsee/dnalogel\"\n\n// initialize five instances\nconst five = new Five({\n    plugins: [\n     [PanoFloorplanRadarPlugin, 'panoFloorplanRadar', {\n     //initialize parameter\n        }]\n    ]\n})\n")),(0,r.kt)("h3",{id:"react-initialization"},"React initialization"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"PanoFloorplanRadarPlugin")," configuration is sufficient to initialize plugin parameters when creating the FiveProvider component."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { createFiveProvider } from \'@realsee/five/react\'\nimport { PanoFloorplanRadarPlugin } from "@realsee/dnalogel"\n\n// Create FiveProvider component\nconst FiveProvider = createFiveProvider({\n    plugins: [\n        [PanoFloorplanRadarPlugin, "panoFloorplanRadar", {\n            // Initialize parameter\n        }]\n    ]\n})\n')),(0,r.kt)("h3",{id:"vue-initialization"},"Vue initialization"),(0,r.kt)("p",null,"When using ",(0,r.kt)("inlineCode",{parentName:"p"},"FiveProvider")," , configure ",(0,r.kt)("inlineCode",{parentName:"p"},"PanoFloorplanRadarPlugin")," in initialize plugin parameters."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vue"},'<template>\n  <FiveProvider :fiveInitArgs="fiveInitArgs">\n  </FiveProvider>\n</template>\n<script setup>\nimport PanoFloorplanRadarPlugin from "@realsee/dnalogel/libs/PanoFloorplanRadarPlugin";\nimport { FiveProvider, FiveCanvas } from "@realsee/five/vue";\nconst fiveInitArgs = {\n    plugins: [\n        [\n            PanoFloorplanRadarPlugin,\n            \'panoFloorplanRadarPlugin\', // Custom plugin name\n            {\n                // Parameter configuration\n            }\n        ]\n    ]\n}\n<\/script>\n')),(0,r.kt)("h3",{id:"load-data"},"Load data"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// Get plugin instance\nconst pluginInstance = five.plugins.panoFloorplanRadar\n// loading data\npluginInstance.load(floorplanServerData)\n")),(0,r.kt)("h3",{id:"core-approach"},"Core approach"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"There are\uff1acore methods provided by PanoFloorplanRadarPlugin")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"async load(data: FloorplanServerData)")," Load household graph;")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"You need to manually load the floor plan data, please read",(0,r.kt)("a",{parentName:"p",href:"https://open-platform.realsee.com/developer/open/api/#/"},"for the data source of[FloorplanServerData] such as the open platform API"),".")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"appendTo(wrapper: Element)")," Mount DOM nodes;")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Load the household chart DOM module into your HTML structure.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"setState(state: Partial<State>options: BaseOptions = {})")," Change plugin State;")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"changeConfigs(config: Config, userAction = true)")," modify plugin configuration information")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"setExtraObjectsWith3DPositions(data: FloorplanExtraObject3D[])")," Show extra content on radar")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"async show(options: BaseOptions = {})")," Shows household charts;")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"async hide(options: BaseOptions = {})")," Hide household graph;")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"enable(options: BaseOptions = {})")," Enable plugins;")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"disable(options: BaseOptions = {})")," Disable plugins;"))),(0,r.kt)("h3",{id:"show-extra-content-on-radar"},"Show extra content on radar"),(0,r.kt)("p",null,"For objects in some three-dimensional scenarios, we can show them with special icons on radar"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"setExtraObjectsWith3DPositions(data: FloorplanExtraObject3D[])")," sets the list of three-dimensional objects displayed on the household map."),(0,r.kt)("p",null,"The structure of three-dimensional data is as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// 3D objects capable of mapping 3D objects on radar charts\nexport interface FloorplanExtraObject3D {\n  id: string\n  // [x, y, z]\n  position: number[]\n}\n")),(0,r.kt)("h3",{id:"configure-parameters"},"Configure Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"wrapper: string | Element")," plugin mounted DOM node.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"hoverEnable?: boolean")," Do not turn on mouse ",(0,r.kt)("inlineCode",{parentName:"p"},"hover")," Highlights."))),(0,r.kt)("p",null,"Configure Sample Reference\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"\nimport { PanoFloorplanRadarPlugin } from \"@realsee/dnalogel\"\nimport { Five, FivePluginInit } from '@realsee/five'\n\nconst five = new Five({\n  plugins: [\n    [\n      PanoFloorplanRadarPlugin,\n      'floorpalnRadar',\n      { \n          wrapper: '.floorplan-radar-wrapper', \n          configs: {\n              hoverEnable: true\n          }\n      }\n    ],\n  ],\n})\n\n")),(0,r.kt)("h2",{id:"demo-source-reference"},"demo source reference"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/realsee-developer/dnalogel/tree/main/examples/src"},"demo source reference")))}h.isMDXComponent=!0}}]);