"use strict";(self.webpackChunkrealsee_developer_github_com=self.webpackChunkrealsee_developer_github_com||[]).push([[7328],{49613:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(59496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,f=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return n?r.createElement(f,a(a({ref:t},d),{},{components:n})):r.createElement(f,a({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},28505:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(2962),o=(n(59496),n(49613));const i={title:'Custom "bridge" protocol'},a=void 0,l={unversionedId:"webview/jsbridge/custom",id:"webview/jsbridge/custom",title:'Custom "bridge" protocol',description:"jsBridge The built-in interface provided basically meets most of the requirements of js two-way communications between the environment and the client.Of course, for certain special customization needs that are not covered by built-in interfaces, two-way communications with clients can be implemented through the following two atomic methods.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/webview/jsbridge/custom.md",sourceDirName:"webview/jsbridge",slug:"/webview/jsbridge/custom",permalink:"/en/docs/webview/jsbridge/custom",draft:!1,tags:[],version:"current",lastUpdatedBy:"lichengjie",lastUpdatedAt:1669264964,formattedLastUpdatedAt:"Nov 24, 2022",frontMatter:{title:'Custom "bridge" protocol'},sidebar:"\u5bb9\u5668\u96c6\u6210",previous:{title:"Event listener",permalink:"/en/docs/webview/jsbridge/event"},next:{title:"React Support",permalink:"/en/docs/webview/jsbridge/react-support"}},c={},s=[{value:"callAndBackfeed",id:"callandbackfeed",level:3},{value:"callAndListen",id:"callandlisten",level:3}],d={toc:s};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"jsBridge")," The built-in interface provided basically meets most of the requirements of ",(0,o.kt)("inlineCode",{parentName:"p"},"js")," two-way communications between the environment and the client.Of course, for certain special customization needs that are not covered by built-in interfaces, two-way communications with clients can be implemented through the following two atomic methods.")),(0,o.kt)("h3",{id:"callandbackfeed"},"callAndBackfeed"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"callAndBackfeed: <T>(scheme: string) => Promise<JSBridgeReturnType<T | false>>"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="\u793a\u4f8b"',title:'"\u793a\u4f8b"'},'const success = await jsBridge.callAndBackfeed<boolean>(\n  "/PlayVoiceMsg?msg={\u5f85\u64ad\u653e\u8bed\u97f3\u6587\u672c}"\n); // Return successful\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Send ",(0,o.kt)("inlineCode",{parentName:"p"},"scheme")," information to the client, who will return to the frontend as soon as they receive it.")),(0,o.kt)("h3",{id:"callandlisten"},"callAndListen"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"callAndListen: <T>(scheme: string, callback: (data: T) => void) => Promise<JSBridgeReturnType<false | (() => void)>>"))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Send ",(0,o.kt)("inlineCode",{parentName:"p"},"scheme")," information to client, client listens to changes in the status and feeds back to the frontend as soon as the status changes occur.The difference with",(0,o.kt)("inlineCode",{parentName:"p"},"callBackfeed")," is\uff1a",(0,o.kt)("inlineCode",{parentName:"p"},"callBackfeed()")," is a one-time behavior,",(0,o.kt)("inlineCode",{parentName:"p"},"callAndListen()")," is listening.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"For more information, refer to ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/en/docs/webview/app/iOS#callandbackfeed"},"iOS Custom Protocol"))," or ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/en/docs/webview/app/Android#callandbackfeed"},"Android Custom Protocol"))," Documents description.")))}p.isMDXComponent=!0}}]);