"use strict";(self.webpackChunkrealsee_developer_github_com=self.webpackChunkrealsee_developer_github_com||[]).push([[3030],{49613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(59496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),d=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(n),m=a,g=u["".concat(p,".").concat(m)]||u[m]||s[m]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},35226:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=n(2962),a=(n(59496),n(49613));const o={title:"Android"},i=void 0,l={unversionedId:"collect/galois/Android",id:"collect/galois/Android",title:"Android",description:"This document is in the direction of Android developers, in the description that follows, we assume you already have Android basics and installed Android Studio and other related development environments.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/collect/galois/Android.md",sourceDirName:"collect/galois",slug:"/collect/galois/Android",permalink:"/en/docs/collect/galois/Android",draft:!1,tags:[],version:"current",lastUpdatedBy:"sansi.lcj",lastUpdatedAt:1669717185,formattedLastUpdatedAt:"Nov 29, 2022",frontMatter:{title:"Android"},sidebar:"\u7a7a\u95f4\u91c7\u96c6",previous:{title:"Introduction",permalink:"/en/docs/collect/intro"}},p={},d=[{value:"SDK Downloads",id:"sdk-downloads",level:3},{value:"Environmental requirements",id:"environmental-requirements",level:3},{value:"Apply SDK access key",id:"apply-sdk-access-key",level:3},{value:"Integration step",id:"integration-step",level:3},{value:"Add permission",id:"add-permission",level:4},{value:"Initialize",id:"initialize",level:4},{value:"Capture",id:"capture",level:4},{value:"Project Upload Listening",id:"project-upload-listening",level:4},{value:"Gets project status",id:"gets-project-status",level:4},{value:"Ticket Update Settings",id:"ticket-update-settings",level:3},{value:"SDK Log File",id:"sdk-log-file",level:3},{value:"Error code",id:"error-code",level:3}],c={toc:d};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{title:"hint",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"This document is in the direction of ",(0,a.kt)("strong",{parentName:"p"},"Android developers"),", in the description that follows, we assume you already have Android basics and installed Android Studio and other related development environments.")),(0,a.kt)("h3",{id:"sdk-downloads"},"SDK Downloads"),(0,a.kt)("p",null,"SDK split into two parts\uff1abase SDK and capture module Capture module split into\uff1acamera, cloud, gamohao"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"SDK"),(0,a.kt)("th",{parentName:"tr",align:null},"Installation increment"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Base Library"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"capture-base-1.0.0.0.aar")),(0,a.kt)("td",{parentName:"tr",align:null},"About 80M")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Camera Beat"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"capture-osc-1.0.0.aar")),(0,a.kt)("td",{parentName:"tr",align:null},"about 55M")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Cloud Beat"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"capture-pan-1.0.0.aar")),(0,a.kt)("td",{parentName:"tr",align:null},"about 55M")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Galo Beat"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"capture-galois-1.0.0.aar")),(0,a.kt)("td",{parentName:"tr",align:null},"about 5M")))),(0,a.kt)("h3",{id:"environmental-requirements"},"Environmental requirements"),(0,a.kt)("p",null,"Minimum compatibility with Android 5.0 (SDK API Lebel 21), recommended using Android 8.0 (SDK API Lebel 26) and above. Android Studio 3.5 and above. App requires Android 5.0 and above."),(0,a.kt)("h3",{id:"apply-sdk-access-key"},"Apply SDK access key"),(0,a.kt)("p",null,"::caution",(0,a.kt)("br",{parentName:"p"}),"\n","Please apply for access keys to the Developer Center containing app_id and app_secret.\n:::"),(0,a.kt)("h3",{id:"integration-step"},"Integration step"),(0,a.kt)("p",null,"Introduce SDK , add rssdk folder in the main module, put ",(0,a.kt)("inlineCode",{parentName:"p"},"aar")," downloaded on demand into it, and import it into the project in the form of local ",(0,a.kt)("inlineCode",{parentName:"p"},"aar"),"."),(0,a.kt)("p",null,"Change ",(0,a.kt)("inlineCode",{parentName:"p"},"build.gradle")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-groovy"},"dependencies {\n  ...\n  implementation fileTree(dir: 'rssdk', include: ['*.aar'])\n  ...\n}\n")),(0,a.kt)("h4",{id:"add-permission"},"Add permission"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},' <uses-permission android:name="android.permission.INTERNET" />\n <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />\n <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />\n')),(0,a.kt)("p",null,"Galohua, additional extra\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},' <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />\n <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />\n <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />\n <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />\n <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />\n')),(0,a.kt)("h4",{id:"initialize"},"Initialize"),(0,a.kt)("p",null,"The initialization of the SDK needs to be performed in the custom ",(0,a.kt)("inlineCode",{parentName:"p"},"application")," , and the initialization method\uff1ais called"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'RsCapture.init(this, object : CaptureConfig() {\n            override fun appId(): String {\n                return \u7533\u8bf7\u7684AppCode\n            }\n\n            override fun appSecret(): String {\n                return \u7533\u8bf7\u7684AppSecret\n            }\n\n            override fun userId(): String {\n                return \u7528\u6237\u552f\u4e00\u6807\u793a\n            }\n\n            @WorkerThread\n            override fun ticketProvider(): TicketProvider {\n                return object : TicketProvider() {\n                    override fun getTicket(action: Action): Ticket {\n                        //Apply for ticket information according to action\n                        return Ticket("test-ticket")\n                    }\n\n                }\n            }\n\n            override fun sandbox(): Boolean {\n                //Whether to use the sandbox environment, true: yes, default not to use\n                return true\n            }\n\n            override fun https(): Boolean {\n                //whether to enable https, true\uff1ato enable, default to enable\n                return false\n            }\n\n            override fun debug(): Boolean {\n                //whether to enable debug, true\uff1ais enabled, default is not enabled\n                return true\n            }\n\n})\n\n\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("inlineCode",{parentName:"p"},"ticket")," for reference development")),(0,a.kt)("h4",{id:"capture"},"Capture"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"RsCapture.openShoot(\n            shootConfig,\n            object : ProjectShootResult() {\n                override fun onError(\n                    projectId: String,\n                    entered: Boolean,\n                    captureException: CaptureException\n                ) {\n                     //Callback\n                     when an error occurs //entered: whether it has been Entered the shooting page\n                     //captureException can get the code and msg through this object\n                }\n\n                override fun onEntered(projectId: String) {\n                    super.onEntered(projectId)\n                    //Callback\n                after entering the project }\n\n                override fun onExit(\n                    projectId: String,\n                    captureException: CaptureException?\n                ) {\n                    super.onExit(projectId, captureException)\n                    //Callback when exiting the project\n                    //captureException If it is not empty, it means that there is an exception when exiting, and you can get the code and msg\n                }\n})\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("inlineCode",{parentName:"p"},"ProjectId")," is the ID of the created project. If not, you can create ",(0,a.kt)("inlineCode",{parentName:"p"},"shootConfig")," is a photo parameter")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"ShootCoinfig")," created"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'ShootConfig.Builder()\n            .projectId("project id") //project ID, required\n            .localProjectId("local project id")//locally created project ID, optional, default empty\n            .checkLocal(true) //If true, if the entered project does not have corresponding local data, it will fail, optional, default true\n            (true)//If true, you need to check the project status online when entering the project, uploading, processing The project is not allowed to open and modify\n            .orientation(ShootConfig.ORIENTATION_PORTRAIT)//Shooting page orientation, only Galois shooting takes effect, default vertical screen, optional\n            .walking(15)//Speed speed, unit second, only Galois shooting Take effect, default 15 seconds, optional\n            .build()\n')),(0,a.kt)("h4",{id:"project-upload-listening"},"Project Upload Listening"),(0,a.kt)("p",null,"Listen"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Upload started end of upload upload failed")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"ProjectUploadListener projectUploadListener = new ProjectUploadListener() {\n            @Override\n            public void onResult(@NotNull ProjectUploadResult projectUploadResult) {\n                //Upload result callback\n                //Get the ID of the project being uploaded\n                String projectId = projectUploadResult.getProjectId();\n                switch (projectUploadResult.getState()) {\n                    case INIT: {\n                        //During upload initialization, this process is preparing for project upload, including verification, compressed files, etc.\n                    }\n                    case START: {\n                        //The project really starts Upload\n                    }\n                    case PROGRESS: {\n                        //Project upload progress update\n                        //Get upload progress\n                        int progress = projectUploadResult.getProgress();\n                    }\n                    case SUCCESS: {\n                        //Upload successfully\n                    }\n                    case FAILED: {\n                        //Upload failed\n                        //Get failure reason\n                        CaptureException exception = projectUploadResult.getCaptureException();\n                        int code = exception.getCode();\n                        String msg = exception.getMsg();\n                    }\n                }\n            }\n        };\n\nRsCapture.addProjectUploadListener(projectUploadListener);\n")),(0,a.kt)("p",null,"Remove listening"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"RsCapture.removeProjectUploadListener(projectUploadListener);\n")),(0,a.kt)("h4",{id:"gets-project-status"},"Gets project status"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"RsCapture.requestProjectState(projectId, new ProjectStatusCallback() {\n            @Override\n            public void onResult(@NotNull ProjectStatusResult projectStatusResult) {\n                if (projectStatusResult.getCaptureException() != null) {\n                    //Project ID\n                    String projectId = projectStatusResult.getProjectId();\n                    //Project status\n                    switch (projectStatusResult.getProjectStatus()) {\n                        case EMPTY: {\n                            //The default state, the project is just created, and there is no local shooting data\n                        }\n                        case SHOOTING: {\n                            // Shooting status, the shooting data exists locally\n                        }\n                        case UPLOADING: {\n                            //Project uploading status\n                        }\n                        case UPLOAD_FAILED: {\n                            //Project uploading failed status\n                        }\n                        case UPLOAD_SUCCESS: {\n                            //Project uploading was successful\n                        }\n                    }\n                } else {\n                    //Failed to obtain project status\n                    //Reason for failed acquisition\n                    CaptureException exception = projectStatusResult.getCaptureException();\n                    int code = exception.getCode();\n                    String msg = exception.getMsg();\n                }\n            }\n        }, null);\n")),(0,a.kt)("h3",{id:"ticket-update-settings"},"Ticket Update Settings"),(0,a.kt)("p",null,"Ticket mechanism, which provides permission verification logic for calling SDK methods, calling SDK method\uff1a"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Create Project Delete Project Rename Project to take a record to get project status")),(0,a.kt)("p",null,"The SDK will first access the updated Ticket interface to get a new Ticket and then use the new Ticket to perform the operation (Action)."),(0,a.kt)("p",null,"For ease of understanding, the following flow chart for production"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"http://vrlab-public.ljcdn.com/common/file/web/f5b6eea4-1c84-41fb-9ed8-9a3ad5cb6cfc.jpg",alt:"Alt text"})),(0,a.kt)("p",null,"Interface update to Ticket implemented by the connector\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'//Build initialization configuration\nCaptureConfig captureConfig = new CaptureConfig() {\n            @NotNull\n            @Override\n            public TicketProvider ticketProvider() {\n                return new TicketProvider() {\n                    @NotNull\n                    @Override\n                    public Ticket getTicket(\n                            @NotNull Action action) throws CaptureException {\n                        //Request the backend to update the ticket here, if an exception occurs, CaptureException can be thrown\n                        //The second callback runs in the child thread and can directly send the network request\n\n                        Ticket ticket;\n                        try {\n                            ticket = getTicketFromServer(action);\n                        } catch (Exception e) {\n                            throw new CaptureException("An exception occurred");\n                        }\n                        return ticket;\n                    }\n                };\n            }\n\n            ...\n        };\n//Initialize SDK\nRsCapture.init(context, captureConfig);\n')),(0,a.kt)("h3",{id:"sdk-log-file"},"SDK Log File"),(0,a.kt)("p",null,"To facilitate troubleshooting, SDK will record some performance logs into the file to fetch log files by following methods"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"//get the same log file path\nString path = RsCapture.getLatestLogFilePath();\n")),(0,a.kt)("h3",{id:"error-code"},"Error code"),(0,a.kt)("p",null,"Error ",(0,a.kt)("inlineCode",{parentName:"p"},"code")," can be retrieved by ",(0,a.kt)("inlineCode",{parentName:"p"},"CaptureException")," objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"int code = captureException.getCode();\nString msg = captureException.getMsg();\n")))}s.isMDXComponent=!0}}]);