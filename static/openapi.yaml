openapi: 3.0.2
info:
  title: "Open API Explorer"
  description: |
    # 准备开发

    **如视 (REALSEE)** 依托成熟的**三维重建** / **深度预测** / **WebGL** 等技术，利用标准、易用的 SDK 及配套 OpenAPI，来实现空间的线上化以及沉浸式的用户体验。由于用户终端的实现采用`HTML5`，因此跨平台特性得天独厚。现如今，我们将这些能力以开放平台的形式对外输出，便于行业从业者能够快速搭建一整套生动、有趣的 3D / VR 应用流。

    ## 交互流程
    核心模式如下图所示，其中 `*` 标注的并非必要。

    ![交互流程](https://files.readme.io/45593d8-Screen_Shot_2022-03-07_at_12.29.42_AM.png)

    ## 为谁准备
    **服务端工程师**(又称后端/服务器工程师，包括 NodeJS Stack)。

    因此当前文档为 **API Explorer** 的形式。客户端及 JavaScript SDK 请[**移步此处**](https://realsee.js.org/docs/front/3d-space/intro) 。

    # 快速开始

    > 请务必按照文中顺序执行，否则会有不可预知的问题。其中**开发前须知**中的1-2步骤非常重要，是构建测试数据的核心环节。

    ## 开发前须知

    |   序号   | 注意事项                                                                                                                                                                                                                                                         | 说明                                                                                    |
    | ------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | --------------------------------------------------------------------------------------- |
    | 1       | 下载**如视 VR**采集应用，[iOS 点击此处下载](https://apps.apple.com/cn/app/%E5%A6%82%E8%A7%86vr-%E6%89%8B%E6%9C%BA%E6%8B%8Dvr%E5%85%A8%E6%99%AF%E6%A8%A1%E5%9E%8B/id1502262095) / [Android 点击此处下载](https://a.app.qq.com/o/simple.jsp?pkgname=com.realsee.dimensionplus)。 | -                                                                                       |
    | 2       | 按照操作引导进行拍摄。                                                                                                                                                                                                                                               | -                                                                                       |
    | 3       | **使用相同手机号**登录[开发者中心官网-右上角-控制台](https://developers.realsee.com/console)。                                                                                                                                                                   | 未登录会自动跳转                                                                        |
    | 4       | 找到 `Application Id(AK)/Application Secret(SK)` 并妥善保管。                                                                                                                                                                                                         | -                                                                                       |
    | **5-1** | 调用获取 `access_token` 接口。                                                                                                                                                                                                                                        | [获取 access_token](/paths/auth-access_token/post) |
    | **5-2** | 按本文API 调用方式进行对应 API 的调用，建议使用 [**列表数据**](/paths/open-v1-entity-vr-list/get) 进行初体验。                  | -                                                                                       |

    ## API 调用流程

    如下图所示，在调用服务端接口前，你需要完成以下 2 个准备工作：

    ![准备工作](https://files.readme.io/808c84c-8793c330d081798e93f3bd03865a263e_vlQYWpsY5S.png)

    1、 申请 API 调用所需要的权限

    **当前为方便用户使用，暂时开放除`转储服务`外的几乎全部 API，后面权限验证的加入另行通知**。

    2、 获取 API 调用所需要的凭证

    API 调用时需要将凭证放入 Header 中，使用语法 `Authorization: <credentials>`进行调用。凭证的获取和使用请参考 [**获取 access_token**](/paths/auth-access_token/post) 。

    ## API 调用方式

    调用服务端接口时，需要使用 HTTPS 协议、JSON 数据格式、UTF8 编码。请求需要把访问凭证 **access_token** 放到 Header 的 Authorization 中。

    示例 ：

    ```
    $curl 'https://app-gateway.realsee.com/open/v1/entity/vr?vr_code=80eQOd3g2V4NZDm2Yy' -H 'Authorization: <申请获取的临时凭据access_token>'
    ```

    ## API 响应结果说明

    绝大多数 API 的响应体结构包括 `code`、`status`、`data` 三个部分。

    code 为错误码，status 为错误信息，data 为 API 的调用结果。默认请求成功时，code 为 0，status 为 `success`。data 在一些操作类 API 的返回中可能不存在。

    例如：

    ```success
    {
      "request_id": "23f4356ef0c3f47dae60af547d581c69",
      "code": 0,
      "status": "success",
      "data": {} // 响应的具体数据内容
    }
    ```

    ```error
    {
      "request_id": "23f4356ef0c3f47dae60af547d581c69",
      "code": -3,
      "status": "miss authorization",
      "data": {} // 响应的具体数据内容
    }
    ```

    > **注意**：请求失败时可以根据 code 的值到本章错误处理段落进行查阅，status 是错误的简要信息，请不要依据 status 来判定一个请求是否失败。请求返回的 Body 中，通过 request_id 来标识唯一一次请求，你可以使用这个值来反馈遇到的 API 调用问题。

    ## 频率控制

    如视服务器开启频率限制来保障我们的 API 是高可用、高性能的，同时保障数据安全。为此当前我们的 OpenAPI 设置了两种默认策略：
    - 单个 API Key 每分钟 **256** 次
    - 单个 IP 每分钟 **500** 次

    # 名词解释

    ## 核心名词

    - **VR 编码**：即 **vr_code**，VR 发布之后，生成的唯一全局编码 。VR 编码即 vr_code 是与如视开放平台交互的核心入参，可以说80%的 API 交互均基于此参数。
    - **项目**：即**project**，VR 拍摄之初生成的实体，在**重建成功之前**的唯一标识。
    - **Work**：**重建之后**的唯一标识，前端 JS/TS SDK 中使用的最小单元。多数情况下，VR/Work 是等价概念，即**vr_code**即 Work 的唯一全局编码。

    ## 扩展名词

    | 名称   | 代号(Code) | 释义                                                                        |
    | ------ | ---------- | --------------------------------------------------------------------------- |
    | 全景图 | panorama   | 如视当前采用`cube`的模式实现全景，因此用于展示的: 上下左右前后共**6**张图片 |
    | 观察点 | observer   | 全景漫游模式下的**点位**，即摄像机所处的位置                                |

    # 错误处理

    > 错误码汇总及快速排查指南，具体错误的业务流程需要自行设计。

    | 错误码 | 说明         | 排查建议                   |
    | ------ | ------------ | -------------------------- |
    | -3     | 业务错误     | 暂无                       |
    | -1     | 鉴权校验错误 | 排查 access_token 是否过期 |

  version: v1
servers:
  - url: https://app-gateway.realsee.com
tags:
  - name: 鉴权
  - name: 核心实体
    externalDocs:
      description: Find out more
      url: https://realsee.js.org
  - name: 扩展实体
    description: 平面图、封面图。
  - name: 直播服务
    description: 如视开放平台提供的一项**全双工通信能力**的标准服务。
  - name: 转储服务
    description: 转储服务。
paths:
  /auth/access_token:
    post:
      requestBody:
        content:
          "application/x-www-form-urlencoded":
            schema:
              type: object
              required: ["app_key", "app_secret"]
              properties:
                app_key:
                  description: 控制台中的Application Id
                  type: string
                  default: "KmAknx7zqqVNpWg8"
                app_secret:
                  description: 控制台中的Application Secret
                  type: string
                  default: "AVE4VGWGBI713YJ1JFVQSNFFCUJSEH7E"
      tags:
        - 鉴权
      summary: |
        获取 access_token
      description: |
        # 为什么签名

        与绝大多数 API 一样，为保证数据的安全性，如视开放平台 API 要求接入时加入鉴权流程。当前支持的鉴权流程包含两种：
        - 1 ~~参数签名~~。即通过特定的算法将请求参数(`Header/Body`)进行编码，其中包含 Unix 时间戳作为随机因子(**RANDOM FACTORS**)，以增加数据抓取的难度，保障数据安全。但当前由于算法实现较为复杂，为方便快速接入/应用先临时废弃，待后面全语言 SDK 均支持时，再重新开放。**已接入的业务方不受影响**。
        - 2 **access_token 机制**。即发起任意 API 调用时，先获取临时 access_token（默认**5 分钟**），后续请求均携带。业务方可以考虑设置约`3min`的缓存，以减少整体服务端 API 的响应时长。

        > 下面演示的 AK / SK 均为测试、演示专用，真实调试时请使用申请时的 AK / SK。

        access_token 默认有效期 **5min** ，建议调用前统一先**从业务端的缓存中获取，而非每次获取**，以减少服务端网络交互。

        #### 返回字段说明
        |名称|示例|类型|描述|必有|
        |-|-|-|-|-|
        |access_token|`your-access-token`|`string`|临时凭据|YES|
        |expire_at|`1645735400`|`integer`|过期时间戳，**默认5min**|YES|

      responses:
        200:
          description: 获取 access_token 即临时凭据，用于后续鉴权
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    description: "标识唯一一次请求"
                  trace_id:
                    type: string
                    description: "标识唯一一次请求, 同request_id类似，但主要用于请求追溯的场景"
                  code:
                    type: integer
                    description: "错误码，请求成功时默认为 0"
                  status:
                    type: string
                    description: "错误信息，请求成功是默认为 success"
                  cost:
                    type: integer
                    description: "服务端计算耗时，单位 ms"
                  data:
                    $ref: "#/components/schemas/AuthAccessToken"
  /open/v1/entity/vr/list:
    get:
      tags:
        - 核心实体
      summary: 列表数据
      description: |
        > 仅发布成功的项目才能从该接口获取，即拍摄中、编辑中的项目均不予外露。

        #### 返回字段说明

        |名称|示例|类型|描述|必有|
        |-|-|-|-|-|
        |list|`[]`|`array`|VR列表|YES|
        |total|`20`|`integer`|总数|YES|
        |page_size|`10`|`integer`|页面大小|YES|
        |current_page|`1`|`integer`|当前页码|YES|

        ##### VR
        |名称|示例|类型|描述|必有|
        |-|-|-|-|-|
        |vr_code|`80yAJrMWbqLBeDlvV1`|`string`|VR 编码|YES|
        |create_time|`2021-07-13 11:27:10`|`string`|创建时间|YES|
        |name|`我的空间`|`string`|VR 名称|YES|

      parameters:
        - name: access_token
          in: query
          description: 鉴权获取的 access_token
          required: true
          schema:
            type: string
            default: your_access_token
        - name: page_size
          in: query
          description: "页面容量，默认为 10"
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 1000
        - name: page
          in: query
          description: "当前页，默认为1"
          required: true
          schema:
            type: integer
            default: 1
            minimum: 1
      responses:
        200:
          description: 获取当前应用(Application)所属的VR列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    description: "标识唯一一次请求"
                  trace_id:
                    type: string
                    description: "标识唯一一次请求, 同request_id类似，但主要用于请求追溯的场景"
                  code:
                    type: integer
                    description: "错误码，请求成功时默认为0"
                  status:
                    type: string
                    description: "错误信息，请求成功是默认为success"
                  cost:
                    type: integer
                    description: "服务端计算耗时，单位ms"
                  data:
                    $ref: "#/components/schemas/V1EntityVRList"
  /open/v1/entity/vr:
    get:
      tags:
        - 核心实体
      summary: 基础数据
      description: |
        > 基础元数据提供至渲染SDK，即可轻松完成基础VR漫游功能。

        对应前端快速上手[**移步至此**](https://realsee.js.org/docs/front/3d-space/intro)，`服务端工程师`跑通 DEMO **亦并非难事**。

        当前 API 数据字段较多，且几乎无需理解**直接透传**至 SDK 即可。
      parameters:
        - name: access_token
          in: query
          description: 鉴权获取的 access_token
          required: true
          schema:
            type: string
            default: your_access_token
        - name: vr_code
          in: query
          description: "VR 编码"
          schema:
            type: string
            default: "80drj5DRZejY2Dq8Oe"
      responses:
        200:
          description: 获取当前VR编码(vr_code)的基础元数据
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    description: "标识唯一一次请求"
                  trace_id:
                    type: string
                    description: "标识唯一一次请求, 同request_id类似，但主要用于请求追溯的场景"
                  code:
                    type: integer
                    description: "错误码，请求成功时默认为0"
                  status:
                    type: string
                    description: "错误信息，请求成功是默认为success"
                  cost:
                    type: integer
                    description: "服务端计算耗时，单位ms"
                  data:
                    $ref: "#/components/schemas/V1EntityVR"
  /open/v1/entity/floorplan:
    get:
      tags:
        - 扩展实体
      summary: 平面图
      description: |
        #### 返回字段说明
        |名称|示例|类型|描述|必有|
        |-|-|-|-|-|
        |computed_data|`80yAJrMWbqLBeDlvV1`|`object`|计算得出的平面图数据|NO|
        |outlines|`[]`|`array of outline`|outline框线图列表，包含 SVG 和 JPEG|YES|

        ##### outline框线图
        |名称|示例|类型|描述|必有|
        |-|-|-|-|-|
        |checksum|-|`string`|校验和|YES|
        |index|`0`|`integer`|点位索引|YES|
        |svg_url|-|`string`|SVG 公网地址|YES|
        |url|-|`string`|JPEG 公网地址|YES|
      parameters:
        - name: access_token
          in: header
          description: 鉴权获取的access_token
          required: true
          schema:
            type: string
            default: your_access_token
        - name: vr_code
          in: query
          description: "VR 编码"
          schema:
            type: string
            default: "80drj5DRZejY2Dq8Oe"
      responses:
        200:
          description: 如视自研的结构化平面图数据，以JSON形式序列化
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    description: "标识唯一一次请求"
                  trace_id:
                    type: string
                    description: "标识唯一一次请求, 同 request_id 类似，但主要用于请求追溯的场景"
                  code:
                    type: integer
                    description: "错误码，请求成功时默认为 0"
                  status:
                    type: string
                    description: "错误信息，请求成功是默认为 success"
                  cost:
                    type: integer
                    description: "服务端计算耗时，单位 ms"
                  data:
                    $ref: "#/components/schemas/V1EntityFloorplan"
  /open/v1/entity/roompicture:
    get:
      tags:
        - 扩展实体
      summary: 分间图
      description: |
        #### 返回字段说明

        |名称|示例|类型|描述|必有|
        |-|-|-|-|-|
        |capture_data|`{}`|`object`|截图结构化数据|YES|
        |cell_name|`客厅`|`string`|分间名|YES|
        |url|-|`string`|截图地址|YES|
        |checksum|-|`string`|截图校验和|YES
        |height|`1080`|`integer`|图片宽度|YES|
        |width|`1440`|`integer`|图片宽度|YES|
      parameters:
        - name: access_token
          in: header
          description: 鉴权获取的access_token
          required: true
          schema:
            type: string
            default: your_access_token
        - name: vr_code
          in: query
          description: "VR 编码"
          schema:
            type: string
            default: "80drj5DRZejY2Dq8Oe"
      responses:
        200:
          description: 分间，即基于户型图判定的单个房间，该房间的全景模式截图即分间图。
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    description: "标识唯一一次请求"
                  trace_id:
                    type: string
                    description: "标识唯一一次请求, 同 request_id 类似，但主要用于请求追溯的场景"
                  code:
                    type: integer
                    description: "错误码，请求成功时默认为 0"
                  status:
                    type: string
                    description: "错误信息，请求成功是默认为 success"
                  cost:
                    type: integer
                    description: "服务端计算耗时，单位 ms"
                  data:
                    $ref: "#/components/schemas/V1EntityRoompicture"
  /open/v1/entity/tag/list:
    get:
      tags:
        - 扩展实体
      summary: 标签列表
      description: |
        #### 返回字段说明

        |名称|示例|类型|描述|必有|
        |-|-|-|-|-|
        |name|`南北通透`|`string`|标签名称|YES|
        |description|-|`string`|标签描述|YES|
        |type|`0`|`string`|标签类型|YES
        |position|-|`array`|三维坐标|YES|
        |target_url|`1080`|`integer`|跳转类型标签下的超链|NO|
      parameters:
        - name: access_token
          in: query
          description: 鉴权获取的 access_token
          required: true
          schema:
            type: string
            default: your_access_token
        - name: vr_code
          in: query
          description: "VR 编码"
          schema:
            type: string
            default: "80drj5DRZejY2Dq8Oe"
      responses:
        200:
          description: VR / 3D 空间中的结构化标签，包含多种类型，当前 API 一次性返回全部标签。
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    description: "标识唯一一次请求"
                  trace_id:
                    type: string
                    description: "标识唯一一次请求, 同 request_id 类似，但主要用于请求追溯的场景"
                  code:
                    type: integer
                    description: "错误码，请求成功时默认为 0"
                  status:
                    type: string
                    description: "错误信息，请求成功是默认为 success"
                  cost:
                    type: integer
                    description: "服务端计算耗时，单位 ms"
                  data:
                    $ref: "#/components/schemas/V1EntityTagList"
  /open/v1/live/entrance:
    post:
      requestBody:
        content:
          "application/json":
            schema:
              type: object
              required:
                ["app_id", "create_user_id", "create_user_role", "members"]
              properties:
                app_id:
                  description: 控制台中的Application Id
                  type: string
                  default: "KmAknx7zqqVNpWg8"
                create_user_id:
                  description: 创建直播房间的用户ID，传入业务系统用户的唯一标识即可，用于区分不同用户
                  type: string
                  default: "7e7b5a43f74142b7bab2021bb54c6d3e"
                create_user_role:
                  description: 创建直播房间用户的角色，此角色必须在您在后台所创建的角色列表之中
                  type: string
                  default: "audience"
                members:
                  description: JSON序列化之后的列表，房间内的用户列表(member)，不传时，默认直播房间内只有创建人一个人
                  type: string
                  default: "[]"
                additive:
                  description: JSON序列化之后的对象，创建房间是的扩展信息各种事件消息的回调，会携带着一部分的扩展信息
                  type: string
                  default: "{}"
      tags:
        - 直播服务
      summary: 创建房间
      description: |
        # 什么是直播

        直播服务是如视开放平台提供的一项**全双工通信能力**的标准服务，与[**腾讯云TRTC**](https://cloud.tencent.com/product/trtc)类似但却能够与如视基础SDK整合紧密的长链接信道，用户能够非常方便的构建多种创新性的应用：

        - VR实时弹幕
        - VR漫游同步
        - VR语音聊天室

        对应前端开发手册[**请移步至此**](https://realsee.js.org/docs/front/3d-space/intro) 。

        #### 请求字段说明
        ##### member(`members`字段内嵌的数据结构)
        |名称|示例|类型|描述|必传|
        |-|-|-|-|-|
        |user_id|`7e7b5a43f74142b7bab2021bb54c6d3e`|`string`|业务系统的用户ID|YES|
        |user_role|`audience`|`string`|用户角色|YES|
        |extension|`{}`|`object`|用户的扩展信息，进入直播房间后，会推送此信息|YES|

        #### 返回字段说明

        |名称|示例|类型|描述|必有|
        |-|-|-|-|-|
        |room_code|`R3LzwQmEb9OQxdJl`|`string`|直播房间号|YES|
        |room_link|`wss://ws-access.realsee.com/open/R3LzwQmEb9OQxdJl?open_app_id=2121`|`integer`|直播房间的长链接(WebSocket)地址|YES|

      parameters:
        - name: access_token
          in: header
          description: 鉴权获取的access_token
          required: true
          schema:
            type: string
            default: your_access_token
      responses:
        200:
          description: 创建直播房间
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    description: "标识唯一一次请求"
                  trace_id:
                    type: string
                    description: "标识唯一一次请求, 同request_id类似，但主要用于请求追溯的场景"
                  code:
                    type: integer
                    description: "错误码，请求成功时默认为0"
                  status:
                    type: string
                    description: "错误信息，请求成功是默认为success"
                  cost:
                    type: integer
                    description: "服务端计算耗时，单位ms"
                  data:
                    $ref: "#/components/schemas/V1LiveRoomDetail"
  /open/v1/live/apply/ticket:
    post:
      requestBody:
        content:
          "application/json":
            schema:
              type: object
              required: ["app_id", "user_id", "user_role", "room_code"]
              properties:
                app_id:
                  description: 控制台中的Application Id
                  type: string
                  default: "KmAknx7zqqVNpWg8"
                user_id:
                  description: 加入直播房间的用户ID，传入业务系统用户的唯一标识即可，用于区分不同用户
                  type: string
                  default: "7e7b5a43f74142b7bab2021bb54c6d3e"
                user_role:
                  description: 加入直播房间用户的角色，此角色必须在您在后台所创建的角色列表之中
                  type: string
                  default: "audience"
                room_code:
                  description: 要加入的房间ID
                  type: string
                  default: "yw7Pz65mrX68A4oa"
                extension:
                  description: JSON序列化之后的对象，用于存储用户的扩展信息
                  type: string
                  default: "{}"
      tags:
        - 直播服务
      summary: 加入房间
      description: |
        #### 返回字段说明

        |名称|示例|类型|描述|必有|
        |-|-|-|-|-|
        |ticket|`99317955e49e0221d593f0330150b9df `|`string`|**服务端签发的通行证, 五分钟内有效, 一旦被使用, 立即失效**|YES|
        |room_link|`wss://ws-access.realsee.com/open/R3LzwQmEb9OQxdJl?open_app_id=2121`|`integer`|直播房间的长链接(WebSocket)地址|YES|
      parameters:
        - name: access_token
          in: header
          description: 鉴权获取的access_token
          required: true
          schema:
            type: string
            default: your_access_token
      responses:
        200:
          description: 申请进入房间通行证
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    description: "标识唯一一次请求"
                  trace_id:
                    type: string
                    description: "标识唯一一次请求, 同request_id类似，但主要用于请求追溯的场景"
                  code:
                    type: integer
                    description: "错误码，请求成功时默认为0"
                  status:
                    type: string
                    description: "错误信息，请求成功是默认为success"
                  cost:
                    type: integer
                    description: "服务端计算耗时，单位ms"
                  data:
                    $ref: "#/components/schemas/V1LiveApplyTicket"
  /open/v1/live/voice/sign:
    post:
      requestBody:
        content:
          "application/json":
            schema:
              type: object
              required: ["app_id", "user_identifier", "user_role", "room_code"]
              properties:
                app_id:
                  description: 控制台中的Application Id
                  type: string
                  default: "KmAknx7zqqVNpWg8"
                user_identifier:
                  description: 用户标识，设置为用户唯一ID即可
                  type: string
                  default: "7e7b5a43f74142b7bab2021bb54c6d3e"
                room_code:
                  description: 要加入的房间ID
                  type: string
                  default: "yw7Pz65mrX68A4oa"
                voice_id:
                  description: 语音房间号
                  type: string
                  default: ""
      tags:
        - 直播服务
      summary: 语音签名
      description: |
        #### 返回字段说明

        |名称|示例|类型|描述|必有|
        |-|-|-|-|-|
        |voice_app_id|`1024`|`string`|语音房间AppID，供SDK使用|YES|
        |user_identifier|`7e7b5a43f74142b7bab2021bb54c6d3e`|`string`|用户标识，设置为用户唯一ID即可|YES|
        |sign|`bar`|`string`|对应语音供应商的签名数据，供SDK使用|YES|
      parameters:
        - name: access_token
          in: header
          description: 鉴权获取的access_token
          required: true
          schema:
            type: string
            default: your_access_token
      responses:
        200:
          description: 获取语音房间签名，相当于语音房间支线的"加入房间"
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    description: "标识唯一一次请求"
                  trace_id:
                    type: string
                    description: "标识唯一一次请求, 同request_id类似，但主要用于请求追溯的场景"
                  code:
                    type: integer
                    description: "错误码，请求成功时默认为0"
                  status:
                    type: string
                    description: "错误信息，请求成功是默认为success"
                  cost:
                    type: integer
                    description: "服务端计算耗时，单位ms"
                  data:
                    $ref: "#/components/schemas/V1LiveVoiceSign"
  /open/v1/live/room/detail:
    get:
      tags:
        - 直播服务
      summary: 房间详情
      description: |
        #### 返回字段说明

        |名称|示例|类型|描述|必有|
        |-|-|-|-|-|
        |room_code|`R3LzwQmEb9OQxdJl`|`string`|直播房间号|YES|
        |room_link|`wss://ws-access.realsee.com/open/R3LzwQmEb9OQxdJl?open_app_id=2121`|`integer`|直播房间的长链接(WebSocket)地址|YES|
      parameters:
        - name: access_token
          in: header
          description: 鉴权获取的access_token
          required: true
          schema:
            type: string
            default: your_access_token
        - name: app_id
          in: query
          description: 控制台中的Application Id
          required: true
          schema:
            type: string
            default: "KmAknx7zqqVNpWg8"
        - name: room_code
          in: query
          description: 查询的房间编码
          required: true
          schema:
            type: string
            default: "yw7Pz65mrX68A4oa"
      responses:
        200:
          description: 查询直播房间数据
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    description: "标识唯一一次请求"
                  trace_id:
                    type: string
                    description: "标识唯一一次请求, 同request_id类似，但主要用于请求追溯的场景"
                  code:
                    type: integer
                    description: "错误码，请求成功时默认为0"
                  status:
                    type: string
                    description: "错误信息，请求成功是默认为success"
                  cost:
                    type: integer
                    description: "服务端计算耗时，单位ms"
                  data:
                    $ref: "#/components/schemas/V1LiveRoomDetail"

components:
  schemas:
    AuthAccessToken:
      type: object
      properties:
        access_token:
          type: string
          description: "临时凭据"
        expire_at:
          type: integer
          description: "过期时间戳，默认 5min"
    V1EntityVRList:
      type: object
      properties:
        list:
          type: array
          description: "VR 列表"
          items:
            type: object
            properties:
              create_time:
                type: string
                description: "创建时间"
              name:
                type: string
                description: "VR 名称"
              vr_code:
                type: string
                description: "VR编码"
        page_size:
          type: integer
          description: "页面大小"
        total:
          type: integer
          description: "总数"
        current_page:
          type: integer
          description: "当前页码"
    V1EntityVR:
      type: object
      properties:
        _signature:
          type: string
          description: "签名数据，用于校验数据完整性"
        allow_hosts:
          type: array
          description: "允许访问的域名"
        base_url:
          type: string
          description: "静态资源的相对基础路径"
        certificate:
          type: string
          description: "证书数据"
        create_time:
          type: string
          description: "Work创建时间"
        expire_at:
          type: string
          description: "过期时间，格式为 Unix 时间戳"
        floor_plan_type:
          type: integer
          description: "平面图类型"
        initial:
          type: object
          description: "初始点位数据"
          properties:
            fov:
              type: integer
              description: "视角"
            heading:
              type: integer
              description: "方向"
            latitude:
              type: integer
              description: "纬度"
            longitude:
              type: number
              description: "经度"
            pano:
              type: integer
              description: "全景图"
            pano_index:
              type: integer
              description: "全景图索引"
        model:
          type: object
          description: "3D模型数据"
          properties:
            file_url:
              type: string
              description: "模型文件地址"
            material_base_url:
              type: string
              description: "模型贴图基础路径"
            material_textures:
              type: array
              description: "模型贴图数据，数组"
              items:
                type: string
                description: "模型贴图地址"
            modify_time:
              type: string
              description: "模型修改时间"
            type:
              type: integer
              description: "模型类型"
        observers:
          type: array
          description: "观察者列表"
          items:
            type: object
            properties:
              accessible_nodes:
                type: array
                description: "可见节点列表"
                items:
                  type: integer
              floor_index:
                type: integer
                description: "楼层索引"
              index:
                type: integer
                description: "观察者索引"
              offset_point_count:
                type: integer
                description: "偏移点数量"
              position:
                type: array
                description: "位置坐标数据"
                items:
                  type: number
              quaternion:
                type: object
                description: "四元数数据"
                properties:
                  w:
                    type: number
                  x:
                    type: number
                  "y":
                    type: number
                  z:
                    type: number
              standing_position:
                type: array
                description: "站立位置"
                items:
                  type: number
              visible_nodes:
                type: array
                items:
                  type: integer
        panorama:
          type: object
          description: "全景图数据"
          properties:
            count:
              type: integer
              description: "全景图数量"
            list:
              type: array
              description: "全景图列表"
              items:
                type: object
                properties:
                  back:
                    type: string
                  down:
                    type: string
                  front:
                    type: string
                  index:
                    type: integer
                  left:
                    type: string
                  right:
                    type: string
                  up:
                    type: string
        picture_url:
          type: string
          description: "VR图片地址"
        title_picture_url:
          type: string
          description: "VR标题图片地址"
        vr_code:
          type: string
          description: "VR编码"
        vr_type:
          type: string
          description: "VR 类型: 80 实景 / 81 虚拟"
    V1EntityFloorplan:
      type: object
      properties:
        computed_data:
          type: object
          description: "计算得出的平面图数据"
          properties:
            bounding:
              type: object
              properties:
                max:
                  type: object
                  properties:
                    x:
                      type: number
                    "y":
                      type: number
                min:
                  type: object
                  properties:
                    x:
                      type: number
                    "y":
                      type: number
                origin:
                  type: object
                  properties:
                    x:
                      type: integer
                    "y":
                      type: integer
            entrance:
              type: string
              nullable: true
            floor_datas:
              type: array
              items:
                type: object
                properties:
                  floor_index:
                    type: integer
                  rooms:
                    type: array
                    items:
                      type: object
                      properties:
                        floor_type:
                          type: integer
                        id:
                          type: string
                        name:
                          type: string
                        observer_indexs:
                          type: array
                          items:
                            type: integer
                        path:
                          type: array
                          items:
                            type: object
                            properties:
                              x:
                                type: number
                              "y":
                                type: number
                        room_label:
                          type: object
                          properties:
                            position:
                              type: object
                              properties:
                                x:
                                  type: number
                                "y":
                                  type: integer
                            position_in_image:
                              type: object
                              properties:
                                x:
                                  type: number
                                "y":
                                  type: number
                        room_type:
                          type: string
                        size:
                          type: number
                  rules:
                    type: object
                    properties:
                      bottom:
                        type: array
                        items:
                          type: array
                          items:
                            type: object
                            properties:
                              x:
                                type: integer
                              "y":
                                type: integer
                      left:
                        type: array
                        items:
                          type: array
                          items:
                            type: object
                            properties:
                              x:
                                type: integer
                              "y":
                                type: integer
                      right:
                        type: array
                        items:
                          type: array
                          items:
                            type: object
                            properties:
                              x:
                                type: integer
                              "y":
                                type: integer
                      top:
                        type: array
                        items:
                          type: array
                          items:
                            type: object
                            properties:
                              x:
                                type: integer
                              "y":
                                type: integer
            observers:
              type: array
              items:
                type: object
                properties:
                  floor_index:
                    type: integer
                  index:
                    type: integer
                  position:
                    type: object
                    properties:
                      x:
                        type: number
                      "y":
                        type: number
                  position_in_image:
                    type: object
                    properties:
                      x:
                        type: number
                      "y":
                        type: number
        format_data:
          type: object
          description: "格式化得出的平面图数据，依据`computed_data`"
          properties:
            bounding:
              type: object
              description: "边界数据"
              properties:
                max:
                  type: object
                  properties:
                    x:
                      type: number
                      description: "最大x坐标"
                    "y":
                      type: number
                      description: "最大y坐标"
                min:
                  type: object
                  properties:
                    x:
                      type: number
                      description: "最小x坐标"
                    "y":
                      type: number
                      description: "最小y坐标"
                origin:
                  type: object
                  properties:
                    x:
                      type: integer
                      description: "原点x坐标"
                    "y":
                      type: integer
                      description: "原点y坐标"
            entrance:
              type: string
              nullable: true
              description: "入口点"
            floor_names:
              type: array
              description: "楼层名称"
              items:
                type: string
                nullable: true
            room_labels:
              type: array
              description: "房间标签"
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: "房间标签id"
                    name:
                      type: string
                      description: "房间名称"
                    room_id:
                      type: string
                      description: "房间id"
                    size:
                      type: number
                      description: "房间大小"
                    x:
                      type: number
                      description: "房间x坐标"
                    "y":
                      type: integer
                      description: "房间y坐标"
            room_observers:
              type: array
              description: "房间观察点"
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: "房间观察点id"
                  name:
                    type: string
                    description: "房间观察点名称"
                  pano_index:
                    type: integer
                    description: "全景索引"
                  room_id:
                    type: string
                    description: "房间id"
                  size:
                    type: number
                    description: "房间大小"
            rooms:
              type: array
              description: "房间"
              items:
                type: array
                items:
                  type: object
                  properties:
                    floor_type:
                      type: integer
                      description: "楼层类型"
                    id:
                      type: string
                      description: "房间id"
                    path:
                      type: array
                      description: "房间路径"
                      items:
                        type: object
                        properties:
                          x:
                            type: number
                            description: "房间x坐标"
                          "y":
                            type: number
                            description: "房间y坐标"
                    room_type:
                      type: string
                      description: "房间类型"
        outlines:
          type: array
          description: "outline框线图列表，包含SVG和JPEG"
          items:
            type: object
            properties:
              checksum:
                type: string
                description: "房间线框校验和"
              index:
                type: integer
                description: "房间线框索引"
              svg_url:
                type: string
                description: "房间线框svg地址"
              url:
                type: string
                description: "房间线框图片地址"
    V1EntityRoompicture:
      type: array
      items:
        type: object
        properties:
          capture_data:
            type: object
            description: "截图结构化数据"
            properties:
              derived_id:
                type: integer
                description: "全景全局唯一索引，依据时间戳"
              filter:
                type: integer
                description: "滤镜"
              fov:
                type: integer
                description: "视角"
              fromFE:
                type: boolean
                description: "是否来自FE(前端)"
              latitude:
                type: integer
                description: "纬度"
              longitude:
                type: number
                description: "经度"
              original_image_checksum:
                type: string
                description: "原图校验和"
              original_image_url:
                type: string
                description: "原图地址"
              pano_index:
                type: integer
                description: "全景索引"
              sizes:
                type: array
                description: "截图尺寸"
                items:
                  type: object
                  properties:
                    height:
                      type: integer
                      description: "高度"
                    width:
                      type: integer
                      description: "宽度"
          cell_name:
            type: string
            description: "房间名称"
          cell_name_type:
            type: integer
            description: "房间名称类型"
          cell_type:
            type: integer
            description: "房间类型"
          checksum:
            type: string
            description: "截图校验和"
          height:
            type: integer
            description: "截图高度"
          url:
            type: string
            description: "截图地址"
          width:
            type: integer
            description: "截图宽度"
    V1EntityTagList:
      type: array
      description: "标签列表"
      items:
        type: object
        properties:
          description:
            type: string
            description: "标签描述"
          id:
            type: integer
            description: "标签id"
          media_data:
            type: string
            nullable: true
            description: "标签多媒体类型"
          name:
            type: string
            description: "标签名称"
          position:
            type: array
            description: "标签坐标"
            items:
              type: number
              description: "标签坐标类型"
          target_url:
            type: string
            description: "标签链接"
          type:
            type: string
            description: "标签类型"
          typed_target_url:
            type: string
            description: "标签类型链接"
    V1LiveRoomDetail:
      type: object
      properties:
        room_code:
          type: string
          description: "直播房间号"
          default: "R3LzwQmEb9OQxdJl"
        room_link:
          type: string
          description: "直播房间的长链接(WebSocket)地址"
          default: "wss://sandbox-ws-access.realsee.com/open/R3LzwQmEb9OQxdJl?open_app_id=2121"
    V1LiveApplyTicket:
      type: object
      properties:
        ticket:
          type: string
          description: "服务端签发的通行证, 五分钟内有效, 一旦被使用, 立即失效"
          default: "99317955e49e0221d593f0330150b9df"
        room_link:
          type: string
          description: "直播房间的长链接(WebSocket)地址"
          default: "wss://sandbox-ws-access.realsee.com/open/R3LzwQmEb9OQxdJl?open_app_id=2121"
    V1LiveVoiceSign:
      type: object
      properties:
        voice_app_id:
          type: string
          description: "语音房间AppID，供SDK使用"
          default: "1024"
        user_identifier:
          type: string
          description: "用户标识，设置为用户唯一ID即可"
          default: "7e7b5a43f74142b7bab2021bb54c6d3e"
        sign:
          type: string
          description: "对应语音供应商的签名数据，供SDK使用"
          default: "bar"

  securitySchemes:
    api_key:
      type: http
      scheme: bearer
      bearerFormat: jwt
